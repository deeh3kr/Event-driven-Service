2022-07-04 13:58:50 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'spring.cloud.config.password' to java.lang.String:

    Property: spring.cloud.config.password
    Value: {cipher}0caafd0f6041ffa5d098d257ff9f1fbd2e104c4c9617d6f04a8feb4df5d1c657bb4eb64e801ef24ce403e4ce4ac4fbf8
    Origin: class path resource [application.yml] - 15:17
    Reason: java.lang.UnsupportedOperationException: No decryption for FailsafeTextEncryptor. Did you configure the keystore correctly?

Action:

Update your application's configuration

2022-07-04 13:59:33 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 35336 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 13:59:33 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 13:59:33 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://config-server:8888
2022-07-04 13:59:33 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Connect Timeout Exception on Url - http://config-server:8888. Will be trying the next url if available
2022-07-04 13:59:34 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f27a1b13-695a-3d71-a125-202fde0b80d9
2022-07-04 13:59:35 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2022-07-04 13:59:35 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 13:59:35 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 47 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:208)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:1105)
	at java.base/java.util.Map.of(Map.java:1353)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:24)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$861ba20a.CGLIB$adminClient$0(<generated>)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$861ba20a$$FastClassBySpringCGLIB$$ed541515.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$861ba20a.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 48 common frames omitted
2022-07-04 14:00:02 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 18600 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 14:00:02 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 14:00:02 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 14:00:02 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=75fa02e72018673d536e4013109c18d5724e6b9e, state=null
2022-07-04 14:00:03 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f27a1b13-695a-3d71-a125-202fde0b80d9
2022-07-04 14:00:04 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 14:00:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 14:00:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 14:00:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656923404528
2022-07-04 14:00:05 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: de09e12b-9f8a-487a-9009-846109cf3650

2022-07-04 14:00:06 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitterTopicListener-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitterTopicListener
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 14:00:06 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656923407059
2022-07-04 14:00:07 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Subscribed to topic(s): twitter-topic
2022-07-04 14:00:07 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitterTopicListener-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitterTopicListener
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 14:00:07 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656923407096
2022-07-04 14:00:07 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Subscribed to topic(s): twitter-topic
2022-07-04 14:00:07 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitterTopicListener-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitterTopicListener
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 14:00:07 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 14:00:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656923407111
2022-07-04 14:00:07 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Subscribed to topic(s): twitter-topic
2022-07-04 14:00:07 [twitterTopicListener-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Cluster ID: 3noP4SiBQdu4RMZJ2Id0yw
2022-07-04 14:00:07 [twitterTopicListener-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Cluster ID: 3noP4SiBQdu4RMZJ2Id0yw
2022-07-04 14:00:07 [twitterTopicListener-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Cluster ID: 3noP4SiBQdu4RMZJ2Id0yw
2022-07-04 14:00:07 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8182
2022-07-04 14:00:08 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Started KafkaToElasticServiceApplication in 10.992 seconds (JVM running for 12.07)
2022-07-04 14:00:09 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 14:00:09 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 14:00:09 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] (Re-)joining group
2022-07-04 14:00:09 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] (Re-)joining group
2022-07-04 14:00:09 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 14:00:09 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] (Re-)joining group
2022-07-04 14:00:15 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitterTopicListener-3-dc087fdc-e8ad-4eb4-b86f-7c9ca26d7ab8', protocol='range'}
2022-07-04 14:00:15 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Finished assignment for group at generation 1: {consumer-twitterTopicListener-3-dc087fdc-e8ad-4eb4-b86f-7c9ca26d7ab8=Assignment(partitions=[twitter-topic-2]), consumer-twitterTopicListener-2-97cd5497-44cf-429b-b39a-3680273cca09=Assignment(partitions=[twitter-topic-1]), consumer-twitterTopicListener-1-950c7e3d-6fb6-4cb9-bf01-acf8c7b3f061=Assignment(partitions=[twitter-topic-0])}
2022-07-04 14:00:15 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitterTopicListener-1-950c7e3d-6fb6-4cb9-bf01-acf8c7b3f061', protocol='range'}
2022-07-04 14:00:15 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitterTopicListener-2-97cd5497-44cf-429b-b39a-3680273cca09', protocol='range'}
2022-07-04 14:00:15 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitterTopicListener-3-dc087fdc-e8ad-4eb4-b86f-7c9ca26d7ab8', protocol='range'}
2022-07-04 14:00:15 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Notifying assignor about the new Assignment(partitions=[twitter-topic-2])
2022-07-04 14:00:15 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitterTopicListener-1-950c7e3d-6fb6-4cb9-bf01-acf8c7b3f061', protocol='range'}
2022-07-04 14:00:15 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Notifying assignor about the new Assignment(partitions=[twitter-topic-0])
2022-07-04 14:00:15 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitterTopicListener-2-97cd5497-44cf-429b-b39a-3680273cca09', protocol='range'}
2022-07-04 14:00:15 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Notifying assignor about the new Assignment(partitions=[twitter-topic-1])
2022-07-04 14:00:15 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Adding newly assigned partitions: twitter-topic-2
2022-07-04 14:00:15 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Adding newly assigned partitions: twitter-topic-0
2022-07-04 14:00:15 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Adding newly assigned partitions: twitter-topic-1
2022-07-04 14:00:15 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Found no committed offset for partition twitter-topic-2
2022-07-04 14:00:15 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Found no committed offset for partition twitter-topic-0
2022-07-04 14:00:15 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Found no committed offset for partition twitter-topic-1
2022-07-04 14:00:15 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Resetting offset for partition twitter-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:19092 (id: 1 rack: null)], epoch=absent}}.
2022-07-04 14:00:15 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Resetting offset for partition twitter-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:39092 (id: 3 rack: null)], epoch=absent}}.
2022-07-04 14:00:15 [twitterTopicListener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions assigned: [twitter-topic-0]
2022-07-04 14:00:15 [twitterTopicListener-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions assigned: [twitter-topic-1]
2022-07-04 14:00:15 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Resetting offset for partition twitter-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:29092 (id: 2 rack: null)], epoch=absent}}.
2022-07-04 14:00:15 [twitterTopicListener-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions assigned: [twitter-topic-2]
2022-07-04 14:00:33 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 11 number of messages received with keys [5653605372327419066, 7089503715581829425, 4799018101695065593, 3565881007392745056, 1527730943540964336, 2651989096320718041, 6034997469723471807, 6566924571458404439, 5257349799386335687, 913346875387221259, 6995299057345161944]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], sending it to Elastic: Thread id 36
2022-07-04 14:00:33 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 8 number of messages received with keys [2336280951955447242, 3604936257362260559, 8447649647155993020, 7943494556907132491, 4062510487005222731, 3048648703944477436, 5113607655032900583, 7491377280640368647]
partitions: [2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7], sending it to Elastic: Thread id 38
2022-07-04 14:00:33 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 10 number of messages received with keys [5074153903331919432, 4337764906302964498, 424009269340696297, 5603570896111526005, 162887987760575935, 6417719651748092039, 7133993664441678746, 2686167299180449206, 6945763332251626004, 8691186992261793109]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], sending it to Elastic: Thread id 34
2022-07-04 14:00:33 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4295817518747377514]
partitions: [2]
 And Offsets: [8], sending it to Elastic: Thread id 38
2022-07-04 14:00:33 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1315546147527919383]
partitions: [1]
 And Offsets: [11], sending it to Elastic: Thread id 36
2022-07-04 14:00:40 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2930829413943957588]
partitions: [0]
 And Offsets: [10], sending it to Elastic: Thread id 34
2022-07-04 14:00:50 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6791290636627802489]
partitions: [0]
 And Offsets: [11], sending it to Elastic: Thread id 34
2022-07-04 14:01:00 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2986904100549867766]
partitions: [1]
 And Offsets: [12], sending it to Elastic: Thread id 36
2022-07-04 14:01:10 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6496769123180878252]
partitions: [2]
 And Offsets: [9], sending it to Elastic: Thread id 38
2022-07-04 14:01:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1147182615631580148]
partitions: [0]
 And Offsets: [12], sending it to Elastic: Thread id 34
2022-07-04 14:01:30 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7835464731810094846]
partitions: [0]
 And Offsets: [13], sending it to Elastic: Thread id 34
2022-07-04 14:01:40 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6817478133016414287]
partitions: [2]
 And Offsets: [10], sending it to Elastic: Thread id 38
2022-07-04 14:01:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8184799678191051454]
partitions: [2]
 And Offsets: [11], sending it to Elastic: Thread id 38
2022-07-04 14:02:00 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3231629380772296030]
partitions: [2]
 And Offsets: [12], sending it to Elastic: Thread id 38
2022-07-04 14:02:10 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [194088820600902677]
partitions: [0]
 And Offsets: [14], sending it to Elastic: Thread id 34
2022-07-04 14:02:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1503246271434584923]
partitions: [0]
 And Offsets: [15], sending it to Elastic: Thread id 34
2022-07-04 14:02:30 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8520646326120981421]
partitions: [2]
 And Offsets: [13], sending it to Elastic: Thread id 38
2022-07-04 14:02:40 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [285629010926499268]
partitions: [1]
 And Offsets: [13], sending it to Elastic: Thread id 36
2022-07-04 14:02:50 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4235889992142604565]
partitions: [0]
 And Offsets: [16], sending it to Elastic: Thread id 34
2022-07-04 14:03:00 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [699823073890324108]
partitions: [0]
 And Offsets: [17], sending it to Elastic: Thread id 34
2022-07-04 14:03:10 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4348213546156948600]
partitions: [2]
 And Offsets: [14], sending it to Elastic: Thread id 38
2022-07-04 14:03:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [435771462865549537]
partitions: [0]
 And Offsets: [18], sending it to Elastic: Thread id 34
2022-07-04 14:03:30 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1436594209153359390]
partitions: [0]
 And Offsets: [19], sending it to Elastic: Thread id 34
2022-07-04 14:03:40 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5939353000242273317]
partitions: [0]
 And Offsets: [20], sending it to Elastic: Thread id 34
2022-07-04 14:03:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2539100301670981683]
partitions: [2]
 And Offsets: [15], sending it to Elastic: Thread id 38
2022-07-04 14:04:00 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6955267919652787126]
partitions: [1]
 And Offsets: [14], sending it to Elastic: Thread id 36
2022-07-04 14:04:10 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3042246015695634918]
partitions: [2]
 And Offsets: [16], sending it to Elastic: Thread id 38
2022-07-04 14:04:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2798383265263463726]
partitions: [0]
 And Offsets: [21], sending it to Elastic: Thread id 34
2022-07-04 14:04:30 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6362719533811168155]
partitions: [2]
 And Offsets: [17], sending it to Elastic: Thread id 38
2022-07-04 14:04:40 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6839445793420848590]
partitions: [1]
 And Offsets: [15], sending it to Elastic: Thread id 36
2022-07-04 14:04:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1598318815763590882]
partitions: [2]
 And Offsets: [18], sending it to Elastic: Thread id 38
2022-07-04 14:05:00 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6254809968400684144]
partitions: [0]
 And Offsets: [22], sending it to Elastic: Thread id 34
2022-07-04 14:05:05 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2022-07-04 14:05:10 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [9009589633305777072]
partitions: [0]
 And Offsets: [23], sending it to Elastic: Thread id 34
2022-07-04 14:05:20 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3671992671698094053]
partitions: [1]
 And Offsets: [16], sending it to Elastic: Thread id 36
2022-07-04 14:05:30 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8045683468450543355]
partitions: [0]
 And Offsets: [24], sending it to Elastic: Thread id 34
2022-07-04 14:05:40 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7758449265307861307]
partitions: [0]
 And Offsets: [25], sending it to Elastic: Thread id 34
2022-07-04 14:05:50 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7560825684631885157]
partitions: [0]
 And Offsets: [26], sending it to Elastic: Thread id 34
2022-07-04 14:06:00 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5967610142519890046]
partitions: [1]
 And Offsets: [17], sending it to Elastic: Thread id 36
2022-07-04 14:06:10 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4952189384504107190]
partitions: [1]
 And Offsets: [18], sending it to Elastic: Thread id 36
2022-07-04 14:06:12 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-0
2022-07-04 14:06:12 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-1
2022-07-04 14:06:12 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-2
2022-07-04 14:06:12 [twitterTopicListener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-0]
2022-07-04 14:06:12 [twitterTopicListener-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-1]
2022-07-04 14:06:12 [twitterTopicListener-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-2]
2022-07-04 14:06:12 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Member consumer-twitterTopicListener-3-dc087fdc-e8ad-4eb4-b86f-7c9ca26d7ab8 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 14:06:12 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Member consumer-twitterTopicListener-1-950c7e3d-6fb6-4cb9-bf01-acf8c7b3f061 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 14:06:12 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Member consumer-twitterTopicListener-2-97cd5497-44cf-429b-b39a-3680273cca09 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 14:06:12 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 14:06:12 [twitterTopicListener-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 14:06:12 [twitterTopicListener-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 14:06:12 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:06:12 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:06:13 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 14:06:13 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 14:06:13 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 14:06:13 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 14:06:13 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 14:06:13 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 14:06:13 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 14:06:13 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 14:06:13 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 14:06:13 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-3 unregistered
2022-07-04 14:06:13 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-2 unregistered
2022-07-04 14:06:13 [twitterTopicListener-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2022-07-04 14:06:13 [twitterTopicListener-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2022-07-04 14:06:13 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-1 unregistered
2022-07-04 14:06:13 [twitterTopicListener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2022-07-04 14:06:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 14:06:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 14:06:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 14:06:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 14:06:24 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 24120 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 14:06:24 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 14:06:24 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 14:06:24 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=0fb9ee767f912dd052adec52d3a879dfde96d988, state=null
2022-07-04 14:06:25 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=f27a1b13-695a-3d71-a125-202fde0b80d9
2022-07-04 14:06:25 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 14:06:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 14:06:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 14:06:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656923786078
2022-07-04 14:06:26 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: f490b1b0-b240-4569-b35c-9bff53a0d4e9

2022-07-04 14:06:28 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8182
2022-07-04 14:06:28 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Started KafkaToElasticServiceApplication in 7.939 seconds (JVM running for 8.825)
2022-07-04 14:06:28 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2022-07-04 14:06:28 [main] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Topics with name twitter-topic is ready for Operation!
2022-07-04 14:06:28 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitterTopicListener-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitterTopicListener
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 14:06:28 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656923788956
2022-07-04 14:06:28 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Subscribed to topic(s): twitter-topic
2022-07-04 14:06:28 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitterTopicListener-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitterTopicListener
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 14:06:28 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656923788976
2022-07-04 14:06:28 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Subscribed to topic(s): twitter-topic
2022-07-04 14:06:28 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitterTopicListener-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitterTopicListener
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 14:06:28 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 14:06:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656923788988
2022-07-04 14:06:28 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Subscribed to topic(s): twitter-topic
2022-07-04 14:06:28 [twitterTopicListener-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Cluster ID: 3noP4SiBQdu4RMZJ2Id0yw
2022-07-04 14:06:28 [twitterTopicListener-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Cluster ID: 3noP4SiBQdu4RMZJ2Id0yw
2022-07-04 14:06:28 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 14:06:28 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 14:06:28 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] (Re-)joining group
2022-07-04 14:06:28 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] (Re-)joining group
2022-07-04 14:06:29 [twitterTopicListener-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Cluster ID: 3noP4SiBQdu4RMZJ2Id0yw
2022-07-04 14:06:29 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 14:06:29 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] (Re-)joining group
2022-07-04 14:06:32 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitterTopicListener-3-c0796446-90a3-40bb-a8e1-e74a2428935e', protocol='range'}
2022-07-04 14:06:32 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitterTopicListener-2-3d92cdb1-22cc-434b-ac7b-41b96ddc28b6', protocol='range'}
2022-07-04 14:06:32 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitterTopicListener-1-436d2d0e-0428-486e-ac55-cef9fd3195a6', protocol='range'}
2022-07-04 14:06:32 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Finished assignment for group at generation 3: {consumer-twitterTopicListener-3-c0796446-90a3-40bb-a8e1-e74a2428935e=Assignment(partitions=[twitter-topic-2]), consumer-twitterTopicListener-1-436d2d0e-0428-486e-ac55-cef9fd3195a6=Assignment(partitions=[twitter-topic-0]), consumer-twitterTopicListener-2-3d92cdb1-22cc-434b-ac7b-41b96ddc28b6=Assignment(partitions=[twitter-topic-1])}
2022-07-04 14:06:32 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitterTopicListener-3-c0796446-90a3-40bb-a8e1-e74a2428935e', protocol='range'}
2022-07-04 14:06:32 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitterTopicListener-1-436d2d0e-0428-486e-ac55-cef9fd3195a6', protocol='range'}
2022-07-04 14:06:32 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitterTopicListener-2-3d92cdb1-22cc-434b-ac7b-41b96ddc28b6', protocol='range'}
2022-07-04 14:06:32 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Notifying assignor about the new Assignment(partitions=[twitter-topic-1])
2022-07-04 14:06:32 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Notifying assignor about the new Assignment(partitions=[twitter-topic-2])
2022-07-04 14:06:32 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Notifying assignor about the new Assignment(partitions=[twitter-topic-0])
2022-07-04 14:06:32 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Adding newly assigned partitions: twitter-topic-1
2022-07-04 14:06:32 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Adding newly assigned partitions: twitter-topic-2
2022-07-04 14:06:32 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Adding newly assigned partitions: twitter-topic-0
2022-07-04 14:06:32 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Setting offset for partition twitter-topic-0 to the committed offset FetchPosition{offset=27, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:19092 (id: 1 rack: null)], epoch=absent}}
2022-07-04 14:06:32 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Setting offset for partition twitter-topic-2 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:29092 (id: 2 rack: null)], epoch=absent}}
2022-07-04 14:06:32 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Setting offset for partition twitter-topic-1 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:39092 (id: 3 rack: null)], epoch=absent}}
2022-07-04 14:06:32 [twitterTopicListener-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions assigned: [twitter-topic-2]
2022-07-04 14:06:32 [twitterTopicListener-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions assigned: [twitter-topic-1]
2022-07-04 14:06:32 [twitterTopicListener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions assigned: [twitter-topic-0]
2022-07-04 14:06:37 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [149598319599651267]
partitions: [2]
 And Offsets: [19], sending it to Elastic: Thread id 40
2022-07-04 14:06:37 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7492924000309192085]
partitions: [1]
 And Offsets: [19], sending it to Elastic: Thread id 38
2022-07-04 14:06:40 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6890977823222554764]
partitions: [1]
 And Offsets: [20], sending it to Elastic: Thread id 38
2022-07-04 14:06:50 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6501930425232684086]
partitions: [0]
 And Offsets: [27], sending it to Elastic: Thread id 36
2022-07-04 14:07:00 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1840643908371042880]
partitions: [2]
 And Offsets: [20], sending it to Elastic: Thread id 40
2022-07-04 14:07:10 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2143242338656040045]
partitions: [0]
 And Offsets: [28], sending it to Elastic: Thread id 36
2022-07-04 14:07:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5993530475635871471]
partitions: [0]
 And Offsets: [29], sending it to Elastic: Thread id 36
2022-07-04 14:07:30 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5991431762749321367]
partitions: [0]
 And Offsets: [30], sending it to Elastic: Thread id 36
2022-07-04 14:07:40 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1743517970672411062]
partitions: [2]
 And Offsets: [21], sending it to Elastic: Thread id 40
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-1
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-2
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-0
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-1]
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-0]
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-2]
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Member consumer-twitterTopicListener-2-3d92cdb1-22cc-434b-ac7b-41b96ddc28b6 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Member consumer-twitterTopicListener-1-436d2d0e-0428-486e-ac55-cef9fd3195a6 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Member consumer-twitterTopicListener-3-c0796446-90a3-40bb-a8e1-e74a2428935e sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-1 unregistered
2022-07-04 14:07:49 [twitterTopicListener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-2 unregistered
2022-07-04 14:07:49 [twitterTopicListener-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-3 unregistered
2022-07-04 14:07:49 [twitterTopicListener-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2022-07-04 14:07:49 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 14:07:49 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 14:07:49 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 14:07:49 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:17:58 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 13572 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:17:58 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:17:58 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:17:58 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:17:58 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Cannot register alias 'elasticsearchTemplate' for name 'elasticsearchOperations': Alias would override bean definition 'elasticsearchTemplate'
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.checkForAliasCircle(DefaultListableBeanFactory.java:1142)
	at org.springframework.core.SimpleAliasRegistry.registerAlias(SimpleAliasRegistry.java:80)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:210)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:153)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
2022-07-04 19:19:14 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 33164 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:19:14 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:19:14 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:19:14 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:19:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:19:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 19:19:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:19:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:19:15 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=9c112f8b-1871-356a-a3b0-7354a18c99b9
2022-07-04 19:19:15 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:19:16 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:19:16 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:19:16 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656942556141
2022-07-04 19:19:16 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 3; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.microservice.demo.kafka.to.elastic.service.transformer.AvroToElasticModelTransformer' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2022-07-04 19:19:16 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:19:16 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting to send the call. Call: fetchMetadata
2022-07-04 19:19:16 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Timed out 1 remaining operation(s) during close.
2022-07-04 19:19:16 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:19:16 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:19:16 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:19:16 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:19:16 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 3 of constructor in com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer required a bean of type 'com.microservice.demo.kafka.to.elastic.service.transformer.AvroToElasticModelTransformer' that could not be found.


Action:

Consider defining a bean of type 'com.microservice.demo.kafka.to.elastic.service.transformer.AvroToElasticModelTransformer' in your configuration.

2022-07-04 19:19:48 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 31156 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:19:48 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:19:48 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:19:48 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:19:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:19:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 177 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 19:19:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:19:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:19:50 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=9ca34bc3-186a-354b-87f2-38279ffc9ee0
2022-07-04 19:19:50 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:19:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:19:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:19:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656942590761
2022-07-04 19:19:51 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
2022-07-04 19:19:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:19:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting to send the call. Call: fetchMetadata
2022-07-04 19:19:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Timed out 1 remaining operation(s) during close.
2022-07-04 19:19:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:19:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:19:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:19:51 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:19:51 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$11c49886.elasticsearchClient(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchOperations(ElasticSearchConfig.java:49)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$11c49886.CGLIB$elasticsearchOperations$1(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$11c49886$$FastClassBySpringCGLIB$$53030c20.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$11c49886.elasticsearchOperations(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 58 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 81 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at com.microservice.demo.elastic.config.ElasticSearchConfig.lambda$elasticsearchClient$0(ElasticSearchConfig.java:41)
	at org.elasticsearch.client.RestClientBuilder.createHttpClient(RestClientBuilder.java:307)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:318)
	at org.elasticsearch.client.RestClientBuilder.build(RestClientBuilder.java:283)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:312)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:304)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchClient(ElasticSearchConfig.java:39)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$11c49886.CGLIB$elasticsearchClient$0(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$11c49886$$FastClassBySpringCGLIB$$53030c20.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$11c49886.elasticsearchClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 82 common frames omitted
2022-07-04 19:20:34 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 14544 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:20:34 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:20:34 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:20:34 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:20:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:20:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 19:20:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:20:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:20:35 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=9ca34bc3-186a-354b-87f2-38279ffc9ee0
2022-07-04 19:20:36 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:20:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:20:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:20:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656942636682
2022-07-04 19:21:26 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
2022-07-04 19:21:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:21:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting to send the call. Call: fetchMetadata
2022-07-04 19:21:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Timed out 1 remaining operation(s) during close.
2022-07-04 19:21:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:21:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:21:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:21:26 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:21:26 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$1086f9cc.elasticsearchClient(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchOperations(ElasticSearchConfig.java:49)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$1086f9cc.CGLIB$elasticsearchOperations$0(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$1086f9cc$$FastClassBySpringCGLIB$$d4ed1b02.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$1086f9cc.elasticsearchOperations(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 58 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 81 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.microservice.demo.config.ElasticConfigData.getConnectionTimeoutMs()" is null
	at com.microservice.demo.elastic.config.ElasticSearchConfig.lambda$elasticsearchClient$0(ElasticSearchConfig.java:41)
	at org.elasticsearch.client.RestClientBuilder.createHttpClient(RestClientBuilder.java:307)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:318)
	at org.elasticsearch.client.RestClientBuilder.build(RestClientBuilder.java:283)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:312)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:304)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchClient(ElasticSearchConfig.java:39)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$1086f9cc.CGLIB$elasticsearchClient$1(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$1086f9cc$$FastClassBySpringCGLIB$$d4ed1b02.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$1086f9cc.elasticsearchClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 82 common frames omitted
2022-07-04 19:21:48 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 27672 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:21:48 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:21:48 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:21:48 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:21:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:21:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 19:21:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:21:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:21:49 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=9ca34bc3-186a-354b-87f2-38279ffc9ee0
2022-07-04 19:21:49 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:21:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:21:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:21:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656942709875
2022-07-04 19:21:50 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
2022-07-04 19:21:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:21:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:21:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:21:50 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:21:50 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:21:51 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$3cb52df6.elasticsearchClient(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchOperations(ElasticSearchConfig.java:49)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$3cb52df6.CGLIB$elasticsearchOperations$0(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$3cb52df6$$FastClassBySpringCGLIB$$7613b397.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$3cb52df6.elasticsearchOperations(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 58 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 81 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:276)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:327)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:312)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:304)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchClient(ElasticSearchConfig.java:39)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$3cb52df6.CGLIB$elasticsearchClient$1(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$3cb52df6$$FastClassBySpringCGLIB$$7613b397.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$3cb52df6.elasticsearchClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 82 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 97 common frames omitted
2022-07-04 19:31:48 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 4552 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:31:48 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:31:48 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:31:48 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:31:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:31:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 190 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 19:31:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:31:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:31:50 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=9ca34bc3-186a-354b-87f2-38279ffc9ee0
2022-07-04 19:31:50 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:31:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:31:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:31:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656943310672
2022-07-04 19:31:51 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
2022-07-04 19:31:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:31:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:31:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:31:51 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:31:51 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:31:51 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.elasticsearchClient(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchOperations(ElasticSearchConfig.java:50)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.CGLIB$elasticsearchOperations$1(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23$$FastClassBySpringCGLIB$$450cb0a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.elasticsearchOperations(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 58 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 81 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:276)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:327)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:312)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:304)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchClient(ElasticSearchConfig.java:40)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.CGLIB$elasticsearchClient$0(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23$$FastClassBySpringCGLIB$$450cb0a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.elasticsearchClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 82 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 97 common frames omitted
2022-07-04 19:33:54 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 8856 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:33:54 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:33:54 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:33:54 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:33:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:33:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 19:33:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:33:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:33:55 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=9ca34bc3-186a-354b-87f2-38279ffc9ee0
2022-07-04 19:33:56 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:33:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:33:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:33:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656943436410
2022-07-04 19:33:57 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
2022-07-04 19:33:57 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:33:57 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:33:57 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:33:57 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:33:57 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:33:57 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticSearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticSearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.elasticsearchClient(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchOperations(ElasticSearchConfig.java:50)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.CGLIB$elasticsearchOperations$1(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23$$FastClassBySpringCGLIB$$450cb0a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.elasticsearchOperations(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 58 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 81 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:276)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:327)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:312)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:304)
	at com.microservice.demo.elastic.config.ElasticSearchConfig.elasticsearchClient(ElasticSearchConfig.java:40)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.CGLIB$elasticsearchClient$0(<generated>)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23$$FastClassBySpringCGLIB$$450cb0a2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticSearchConfig$$EnhancerBySpringCGLIB$$752eec23.elasticsearchClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 82 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 97 common frames omitted
2022-07-04 19:37:19 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 32604 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:37:19 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:37:19 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:37:19 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:37:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:37:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Elasticsearch repository interfaces.
2022-07-04 19:37:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:37:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:37:20 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=4ad6a352-796c-3894-8241-00525f4c72a9
2022-07-04 19:37:20 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:37:20 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:37:20 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:37:20 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656943640712
2022-07-04 19:37:20 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2022-07-04 19:37:21 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:37:21 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting to send the call. Call: fetchMetadata
2022-07-04 19:37:21 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.clients.admin.KafkaAdminClient - [AdminClient clientId=adminclient-1] Timed out 1 remaining operation(s) during close.
2022-07-04 19:37:21 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:37:21 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:37:21 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:37:21 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:37:21 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient required a bean of type 'com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository' that could not be found.


Action:

Consider defining a bean of type 'com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository' in your configuration.

2022-07-04 19:38:26 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 20632 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:38:26 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:38:26 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:38:26 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:38:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:38:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 133 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 19:38:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:38:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:38:27 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 19:38:27 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:38:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:38:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:38:28 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656943708104
2022-07-04 19:38:28 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
2022-07-04 19:38:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:38:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:38:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:38:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:38:28 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:38:28 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Cannot resolve reference to bean 'elasticsearchTemplate' while setting bean property 'elasticsearchOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchOperations' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.core.ElasticsearchOperations]: Factory method 'elasticsearchOperations' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticsearchClient' defined in class path resource [com/microservice/demo/elastic/config/ElasticsearchConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservice.demo.elastic.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$8728b403.elasticsearchClient(<generated>)
	at com.microservice.demo.elastic.config.ElasticsearchConfig.elasticsearchOperations(ElasticsearchConfig.java:47)
	at com.microservice.demo.elastic.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$8728b403.CGLIB$elasticsearchOperations$0(<generated>)
	at com.microservice.demo.elastic.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$8728b403$$FastClassBySpringCGLIB$$685674ac.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$8728b403.elasticsearchOperations(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 58 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.RestHighLevelClient]: Factory method 'elasticsearchClient' threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 81 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/elasticsearch/action/admin/indices/flush/SyncedFlushRequest
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:276)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:327)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:312)
	at org.elasticsearch.client.RestHighLevelClient.<init>(RestHighLevelClient.java:304)
	at com.microservice.demo.elastic.config.ElasticsearchConfig.elasticsearchClient(ElasticsearchConfig.java:36)
	at com.microservice.demo.elastic.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$8728b403.CGLIB$elasticsearchClient$1(<generated>)
	at com.microservice.demo.elastic.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$8728b403$$FastClassBySpringCGLIB$$685674ac.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.elastic.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$8728b403.elasticsearchClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 82 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 97 common frames omitted
2022-07-04 19:45:15 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 19656 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 19:45:15 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 19:45:15 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 19:45:15 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 19:45:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:45:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 168 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 19:45:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 19:45:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 19:45:16 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 19:45:17 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 19:45:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 19:45:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 19:45:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656944117292
2022-07-04 19:45:18 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
2022-07-04 19:45:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 19:45:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 19:45:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 19:45:18 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 19:45:18 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 19:45:18 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactory.getTargetRepository(ElasticsearchRepositoryFactory.java:74)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean.afterPropertiesSet(ElasticsearchRepositoryFactoryBean.java:69)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:55)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:315)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinatesFor(AbstractIndexTemplate.java:238)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinates(AbstractIndexTemplate.java:234)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.exists(AbstractIndexTemplate.java:130)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.<init>(SimpleElasticsearchRepository.java:87)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 57 common frames omitted
2022-07-04 20:17:59 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 2664 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 20:17:59 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 20:17:59 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 20:17:59 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 20:18:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:18:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 163 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 20:18:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:18:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 20:18:01 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 20:18:01 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 20:18:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:18:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:18:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946081773
2022-07-04 20:18:11 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
2022-07-04 20:18:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 20:18:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:18:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:18:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:18:11 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 20:18:11 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactory.getTargetRepository(ElasticsearchRepositoryFactory.java:74)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean.afterPropertiesSet(ElasticsearchRepositoryFactoryBean.java:69)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:55)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:315)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinatesFor(AbstractIndexTemplate.java:238)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinates(AbstractIndexTemplate.java:234)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.exists(AbstractIndexTemplate.java:130)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.<init>(SimpleElasticsearchRepository.java:87)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 57 common frames omitted
2022-07-04 20:19:53 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 29608 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 20:19:53 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 20:19:53 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 20:19:53 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 20:19:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:19:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 182 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 20:19:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:19:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 20:19:55 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 20:19:55 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 20:19:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:19:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:19:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946196011
2022-07-04 20:20:26 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
2022-07-04 20:20:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 20:20:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:20:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:20:26 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:20:26 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 20:20:26 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactory.getTargetRepository(ElasticsearchRepositoryFactory.java:74)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean.afterPropertiesSet(ElasticsearchRepositoryFactoryBean.java:69)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:55)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:315)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinatesFor(AbstractIndexTemplate.java:238)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinates(AbstractIndexTemplate.java:234)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.exists(AbstractIndexTemplate.java:130)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.<init>(SimpleElasticsearchRepository.java:87)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 57 common frames omitted
2022-07-04 20:20:39 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 32876 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 20:20:39 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 20:20:39 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 20:20:39 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 20:20:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:20:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 164 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 20:20:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:20:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 20:20:41 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 20:20:41 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 20:20:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:20:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:20:41 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946241936
2022-07-04 20:20:59 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
2022-07-04 20:20:59 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 20:20:59 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:20:59 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:20:59 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:20:59 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 20:20:59 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactory.getTargetRepository(ElasticsearchRepositoryFactory.java:74)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean.afterPropertiesSet(ElasticsearchRepositoryFactoryBean.java:69)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:55)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:315)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinatesFor(AbstractIndexTemplate.java:238)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinates(AbstractIndexTemplate.java:234)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.exists(AbstractIndexTemplate.java:130)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.<init>(SimpleElasticsearchRepository.java:87)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 57 common frames omitted
2022-07-04 20:22:45 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 32944 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 20:22:45 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 20:22:45 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 20:22:45 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 20:22:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:22:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 154 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 20:22:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:22:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 20:22:46 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 20:22:46 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 20:22:47 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:22:47 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:22:47 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946367184
2022-07-04 20:22:48 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elastic' cannot be found on null
2022-07-04 20:22:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 20:22:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:22:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:22:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:22:48 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 20:22:48 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 4; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elastic' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticRepositoryIndexClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\elastic\elastic-index-client\target\classes\com\microservice\demo\elastic\index\client\service\impl\TwitterElasticRepositoryIndexClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elastic' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterElasticsearchIndexRepository' defined in com.microservice.demo.elastic.index.client.repository.TwitterElasticsearchIndexRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchConfig: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elastic' cannot be found on null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elastic' cannot be found on null
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactory.getTargetRepository(ElasticsearchRepositoryFactory.java:74)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean.afterPropertiesSet(ElasticsearchRepositoryFactoryBean.java:69)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elastic' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.OpMinus.getValueInternal(OpMinus.java:98)
	at org.springframework.expression.spel.ast.OpMinus.getValueInternal(OpMinus.java:98)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:315)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinatesFor(AbstractIndexTemplate.java:238)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.getIndexCoordinates(AbstractIndexTemplate.java:234)
	at org.springframework.data.elasticsearch.core.AbstractIndexTemplate.exists(AbstractIndexTemplate.java:130)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.<init>(SimpleElasticsearchRepository.java:87)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 57 common frames omitted
2022-07-04 20:23:00 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 31572 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 20:23:00 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 20:23:00 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 20:23:00 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 20:23:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:23:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 20:23:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:23:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 20:23:01 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 20:23:01 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 20:23:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:23:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:23:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946382073
2022-07-04 20:23:12 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 344cb985-c205-4d1a-bcd7-f79ce8bd100f

2022-07-04 20:23:13 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8182
2022-07-04 20:23:14 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Started KafkaToElasticServiceApplication in 16.666 seconds (JVM running for 17.465)
2022-07-04 20:23:14 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2022-07-04 20:23:14 [main] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Topics with name twitter-topic is ready for Operation!
2022-07-04 20:23:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:23:14 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946394426
2022-07-04 20:23:14 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:23:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:23:14 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946394444
2022-07-04 20:23:14 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:23:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:23:14 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:23:14 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946394456
2022-07-04 20:23:14 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:23:14 [twitter-topic-consumer-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cluster ID: IVYZDQTlS0-OG3sTo2Nk8w
2022-07-04 20:23:14 [twitter-topic-consumer-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cluster ID: IVYZDQTlS0-OG3sTo2Nk8w
2022-07-04 20:23:14 [twitter-topic-consumer-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cluster ID: IVYZDQTlS0-OG3sTo2Nk8w
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:17 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:18 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483644
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:19 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:19 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:19 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:19 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:23:19 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:23:25 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-1-b3d11f76-696d-477a-b892-8acbcfd1b1f1', protocol='range'}
2022-07-04 20:23:25 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-3-5fe8fd53-e6ba-4191-9745-5bc83f9d927b', protocol='range'}
2022-07-04 20:23:25 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-2-9b6386d4-68c4-4bd5-a806-9d052ca21c80', protocol='range'}
2022-07-04 20:23:25 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Finished assignment for group at generation 1: {consumer-twitter-topic-consumer-2-9b6386d4-68c4-4bd5-a806-9d052ca21c80=Assignment(partitions=[twitter-topic-1]), consumer-twitter-topic-consumer-3-5fe8fd53-e6ba-4191-9745-5bc83f9d927b=Assignment(partitions=[twitter-topic-2]), consumer-twitter-topic-consumer-1-b3d11f76-696d-477a-b892-8acbcfd1b1f1=Assignment(partitions=[twitter-topic-0])}
2022-07-04 20:23:25 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-1-b3d11f76-696d-477a-b892-8acbcfd1b1f1', protocol='range'}
2022-07-04 20:23:25 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-0])
2022-07-04 20:23:25 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-2-9b6386d4-68c4-4bd5-a806-9d052ca21c80', protocol='range'}
2022-07-04 20:23:25 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-3-5fe8fd53-e6ba-4191-9745-5bc83f9d927b', protocol='range'}
2022-07-04 20:23:25 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-1])
2022-07-04 20:23:25 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-2])
2022-07-04 20:23:25 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-1
2022-07-04 20:23:25 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-0
2022-07-04 20:23:25 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-2
2022-07-04 20:23:25 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-2
2022-07-04 20:23:25 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-0
2022-07-04 20:23:25 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-1
2022-07-04 20:23:25 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:29092 (id: 2 rack: null)], epoch=absent}}.
2022-07-04 20:23:25 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-1]
2022-07-04 20:23:25 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:19092 (id: 1 rack: null)], epoch=absent}}.
2022-07-04 20:23:25 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-2]
2022-07-04 20:23:26 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:39092 (id: 3 rack: null)], epoch=absent}}.
2022-07-04 20:23:26 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-0]
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [8944447585128612736, 3646173030680335672, 4538567827263222223, 3113084071087069366, 7661414529504823070, 6899072757676553851, 4933890471400626734, 8898651092864519868, 9045733332076576941, 1787805285060071161, 7126216531300920687, 9198595789195779445, 5731070731503540342, 2088582464079694265, 699759855687622874, 4461781340667539677, 7496253805779776363, 8911150588243116862, 2682133964878975361, 428402473194666278, 8246918847681665561, 5998486879460578689, 683754807532493325, 6918720888825305188, 778521699549053346, 6354245655736270924, 1137179597919632462, 4901411691765726316, 8671758133067416084, 369182910295660953, 7242681874298812626, 6577852811432773009, 271503226002200323, 6886840307918953916, 1900018282362224020, 4100524765308212645, 8009868145203814369, 5577229594041443354, 3928820601458375728, 4572846979249533183, 1921646596608549886, 316621901003720861, 1004002048033948181, 3204134388775585409, 2553361528941816306, 5955846203338923561, 5367346383248864943, 5055389954994511491, 434008132948717883, 1865593424174711245, 5505854153269148372, 7766610690851295689, 1573047899805838292, 990091299800446181, 2637863739963827668, 7455556254502166929, 6401790515911581529, 4794046728733686880, 880984343782690740, 893173226752165396, 2734807262631291250, 3415337012322234996, 7969518470351871016, 3304954038743700941, 6392481050032984417, 5827541796911575442, 3523756069168891163, 9030750951745944850, 5590860674525175493, 9015696732100923283, 2490749122844964747, 7010662088439541687, 4371929166494406792, 6996970765984600732, 1911750829965663467, 866050584352685629, 7845610398152752389, 3397099120440328131, 1427480614800307478, 2945080329903726352, 8459121707588516858, 203420932205525087, 6592268807406281019, 8981056926276790895, 2255950355305511381, 3741092803931800432, 8948872090885009569, 6979961908896969643, 6991582213599867796, 5827963347402241812, 8549796151873206820, 1095879932614910816, 8670013393891202639, 3522185792261216258, 5215166527092980197, 4914005794765982250, 1111951723700074705, 2164693056656043139]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 53
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 98 number of messages received with keys [2923155895891670573, 6762300354467536292, 6867820179292573188, 7702342087826008860, 8031449099033363684, 1620944185470892455, 8259238567196853331, 7653640099416705410, 6151558442874938968, 3421517213861466390, 6782778781514869676, 6746965534140099034, 5896655490683572624, 6170188734244303243, 9071234030541488318, 1681139900967488317, 1086399989187844957, 2473133824380232490, 127076977123916569, 2664580689885605004, 2526632111477110810, 4956873269909703532, 2172763517417739423, 5162151288629072074, 9082480164120299093, 4346486862864669886, 5953819021442501195, 1463941311335162689, 6260345360414218488, 4980770598683088667, 5656003664248990325, 2732350774801194876, 2442838157962650832, 8531606122591022316, 2775992583356268488, 10501228667250862, 6995397215522393722, 1780562546471502441, 9170672578712948099, 2582220880109827259, 534011628259716257, 2105268028872273316, 889402747185869756, 2949633470870220911, 4603918633786150429, 309858327251449066, 7612715470316981735, 4631892895762470341, 1851657927854132968, 2431486343950163282, 1403454256241680826, 5499964435090004932, 9040266968193924387, 7975926455472021979, 8382466890820684945, 8401943897554348764, 8736785061393880004, 2671027835622324783, 6386968480009792620, 5512829653712266348, 2777854978242713469, 8459856259479853901, 1460419203368188399, 5344512305590476534, 1440093140724018100, 3437442392550765330, 87048106288349509, 697525433461269734, 3222966567400938457, 5956647845521491687, 5984636175820258219, 569936128804036298, 1498380158952806600, 37805376213936337, 911810683958073786, 6147540143549482156, 7400457980316185268, 1834278443204534411, 4448689310454036371, 8198166985027494283, 8184884207015544269, 4432026174818129821, 2369783954559333773, 1966097502706473155, 6477361883756852502, 5741692837092414721, 5677896780850282290, 3140056856966803390, 22075662120960094, 8281839914911759341, 4406031342035567447, 8998652522511152157, 6465760412922206595, 6343348517019053423, 7537339546740459097, 1893624157036097050, 1630815330025426375, 1807085010203165687]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], sending it to Elastic: Thread id 57
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 123 number of messages received with keys [8589329452039658068, 3469463207178278090, 4741723179674352299, 5810144329296284492, 2837209255938813133, 3307400091227202423, 7149503134138247097, 5281791198014976727, 8498372997725309802, 851598315338191875, 2924312995483020797, 8467597089058988770, 6422084561335359856, 4902891667389857263, 6608080834281246341, 3545601680771760686, 5133974748878921480, 9025323054387262270, 6009487318759191924, 2346883663147704506, 6333775037729577047, 7180715567341046779, 3236397524228771015, 1380701831198655711, 7905905598609715481, 2839127582752201869, 6213635587698890589, 5217217912964525827, 6723394388148743159, 8859219846003125357, 4527024335532758531, 2315339687650420141, 7842202563423607981, 1511609948827840306, 6832027043629529249, 4356562969377090902, 6808832684356209501, 8058586871357510725, 2222388368995725969, 2313762544141600688, 3324381913801211526, 4555008964252996455, 7613487416910333634, 2632498647902745672, 1185170364379803423, 1399879937467507636, 4735003993103795028, 8943529958466089459, 6421661308341946591, 6787703547181388774, 4282396078412523238, 7979267028047327194, 6180717148516333212, 8171702935165923011, 7738499689053229172, 4927868640230553670, 8730221065617089233, 6061169979580169897, 1885407876982178889, 914513528497444918, 5037191617455864174, 4999846851408159887, 278068934388142945, 7725543633630140188, 2703516105473932594, 7866364865487230777, 6502144436300708006, 4729443234183777390, 4963238742796775867, 8399611369420453137, 7139469372746459257, 3276271296318130729, 5436573608415359079, 889061377737795028, 3632667464890070682, 7760945305001216783, 256892748064601823, 9035717917644590005, 5756595238344941980, 2622194583187870305, 2491654857126450177, 1315377865731279040, 1884633670976192727, 8979817895778161130, 3306276500567738365, 3636886768447598798, 2324836182537449506, 760749224407009354, 4109653881229886983, 252544064891901551, 6442042005390311366, 4286762865353367802, 3155655731096830054, 4974320025237019529, 4715332992876830790, 3652777127275597134, 6293948435372560959, 351508685666868508, 1192467761090112727, 7264915651146734097, 8132045578433705933, 8115073713961567651, 3807374200618628144, 9028355195967033302, 5764191988501770986, 6965303591691709393, 169984784917993211, 3165461085884429949, 8968589000243436507, 4381057949401058241, 4279796858988580866, 7926571502279153903, 8864076957348829741, 5705909580081122232, 4707491631737993015, 6984672572902834259, 2836372859922556007, 8338892352968597561, 4995720900149435508, 3677677435066034085, 9221948156077345174, 5595579010862089270, 7492718364971398585]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], sending it to Elastic: Thread id 55
2022-07-04 20:23:32 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@0,twitter-topic-0@1,twitter-topic-0@2,twitter-topic-0@3,twitter-topic-0@4,twitter-topic-0@5,twitter-topic-0@6,twitter-topic-0@7,twitter-topic-0@8,twitter-topic-0@9,twitter-topic-0@10,twitter-topic-0@11,twitter-topic-0@12,twitter-topic-0@13,twitter-topic-0@14,twitter-topic-0@15,twitter-topic-0@16,twitter-topic-0@17,twitter-topic-0@18,twitter-topic-0@19,twitter-topic-0@20,twitter-topic-0@21,twitter-topic-0@22,twitter-topic-0@23,twitter-topic-0@24,twitter-topic-0@25,twitter-topic-0@26,twitter-topic-0@27,twitter-topic-0@28,twitter-topic-0@29,twitter-topic-0@30,twitter-topic-0@31,twitter-topic-0@32,twitter-topic-0@33,twitter-topic-0@34,twitter-topic-0@35,twitter-topic-0@36,twitter-topic-0@37,twitter-topic-0@38,twitter-topic-0@39,twitter-topic-0@40,twitter-topic-0@41,twitter-topic-0@42,twitter-topic-0@43,twitter-topic-0@44,twitter-topic-0@45,twitter-topic-0@46,twitter-topic-0@47,twitter-topic-0@48,twitter-topic-0@49,twitter-topic-0@50,twitter-topic-0@51,twitter-topic-0@52,twitter-topic-0@53,twitter-topic-0@54,twitter-topic-0@55,twitter-topic-0@56,twitter-topic-0@57,twitter-topic-0@58,twitter-topic-0@59,twitter-topic-0@60,twitter-topic-0@61,twitter-topic-0@62,twitter-topic-0@63,twitter-topic-0@64,twitter-topic-0@65,twitter-topic-0@66,twitter-topic-0@67,twitter-topic-0@68,twitter-topic-0@69,twitter-topic-0@70,twitter-topic-0@71,twitter-topic-0@72,twitter-topic-0@73,twitter-topic-0@74,twitter-topic-0@75,twitter-topic-0@76,twitter-topic-0@77,twitter-topic-0@78,twitter-topic-0@79,twitter-topic-0@80,twitter-topic-0@81,twitter-topic-0@82,twitter-topic-0@83,twitter-topic-0@84,twitter-topic-0@85,twitter-topic-0@86,twitter-topic-0@87,twitter-topic-0@88,twitter-topic-0@89,twitter-topic-0@90,twitter-topic-0@91,twitter-topic-0@92,twitter-topic-0@93,twitter-topic-0@94,twitter-topic-0@95,twitter-topic-0@96,twitter-topic-0@97
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:14:41' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:14:41' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:14:41' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 74 common frames omitted
2022-07-04 20:23:32 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@0,twitter-topic-1@1,twitter-topic-1@2,twitter-topic-1@3,twitter-topic-1@4,twitter-topic-1@5,twitter-topic-1@6,twitter-topic-1@7,twitter-topic-1@8,twitter-topic-1@9,twitter-topic-1@10,twitter-topic-1@11,twitter-topic-1@12,twitter-topic-1@13,twitter-topic-1@14,twitter-topic-1@15,twitter-topic-1@16,twitter-topic-1@17,twitter-topic-1@18,twitter-topic-1@19,twitter-topic-1@20,twitter-topic-1@21,twitter-topic-1@22,twitter-topic-1@23,twitter-topic-1@24,twitter-topic-1@25,twitter-topic-1@26,twitter-topic-1@27,twitter-topic-1@28,twitter-topic-1@29,twitter-topic-1@30,twitter-topic-1@31,twitter-topic-1@32,twitter-topic-1@33,twitter-topic-1@34,twitter-topic-1@35,twitter-topic-1@36,twitter-topic-1@37,twitter-topic-1@38,twitter-topic-1@39,twitter-topic-1@40,twitter-topic-1@41,twitter-topic-1@42,twitter-topic-1@43,twitter-topic-1@44,twitter-topic-1@45,twitter-topic-1@46,twitter-topic-1@47,twitter-topic-1@48,twitter-topic-1@49,twitter-topic-1@50,twitter-topic-1@51,twitter-topic-1@52,twitter-topic-1@53,twitter-topic-1@54,twitter-topic-1@55,twitter-topic-1@56,twitter-topic-1@57,twitter-topic-1@58,twitter-topic-1@59,twitter-topic-1@60,twitter-topic-1@61,twitter-topic-1@62,twitter-topic-1@63,twitter-topic-1@64,twitter-topic-1@65,twitter-topic-1@66,twitter-topic-1@67,twitter-topic-1@68,twitter-topic-1@69,twitter-topic-1@70,twitter-topic-1@71,twitter-topic-1@72,twitter-topic-1@73,twitter-topic-1@74,twitter-topic-1@75,twitter-topic-1@76,twitter-topic-1@77,twitter-topic-1@78,twitter-topic-1@79,twitter-topic-1@80,twitter-topic-1@81,twitter-topic-1@82,twitter-topic-1@83,twitter-topic-1@84,twitter-topic-1@85,twitter-topic-1@86,twitter-topic-1@87,twitter-topic-1@88,twitter-topic-1@89,twitter-topic-1@90,twitter-topic-1@91,twitter-topic-1@92,twitter-topic-1@93,twitter-topic-1@94,twitter-topic-1@95,twitter-topic-1@96,twitter-topic-1@97,twitter-topic-1@98,twitter-topic-1@99,twitter-topic-1@100,twitter-topic-1@101,twitter-topic-1@102,twitter-topic-1@103,twitter-topic-1@104,twitter-topic-1@105,twitter-topic-1@106,twitter-topic-1@107,twitter-topic-1@108,twitter-topic-1@109,twitter-topic-1@110,twitter-topic-1@111,twitter-topic-1@112,twitter-topic-1@113,twitter-topic-1@114,twitter-topic-1@115,twitter-topic-1@116,twitter-topic-1@117,twitter-topic-1@118,twitter-topic-1@119,twitter-topic-1@120,twitter-topic-1@121,twitter-topic-1@122
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:15:03' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:15:03' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:15:03' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 74 common frames omitted
2022-07-04 20:23:32 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@0,twitter-topic-2@1,twitter-topic-2@2,twitter-topic-2@3,twitter-topic-2@4,twitter-topic-2@5,twitter-topic-2@6,twitter-topic-2@7,twitter-topic-2@8,twitter-topic-2@9,twitter-topic-2@10,twitter-topic-2@11,twitter-topic-2@12,twitter-topic-2@13,twitter-topic-2@14,twitter-topic-2@15,twitter-topic-2@16,twitter-topic-2@17,twitter-topic-2@18,twitter-topic-2@19,twitter-topic-2@20,twitter-topic-2@21,twitter-topic-2@22,twitter-topic-2@23,twitter-topic-2@24,twitter-topic-2@25,twitter-topic-2@26,twitter-topic-2@27,twitter-topic-2@28,twitter-topic-2@29,twitter-topic-2@30,twitter-topic-2@31,twitter-topic-2@32,twitter-topic-2@33,twitter-topic-2@34,twitter-topic-2@35,twitter-topic-2@36,twitter-topic-2@37,twitter-topic-2@38,twitter-topic-2@39,twitter-topic-2@40,twitter-topic-2@41,twitter-topic-2@42,twitter-topic-2@43,twitter-topic-2@44,twitter-topic-2@45,twitter-topic-2@46,twitter-topic-2@47,twitter-topic-2@48,twitter-topic-2@49,twitter-topic-2@50,twitter-topic-2@51,twitter-topic-2@52,twitter-topic-2@53,twitter-topic-2@54,twitter-topic-2@55,twitter-topic-2@56,twitter-topic-2@57,twitter-topic-2@58,twitter-topic-2@59,twitter-topic-2@60,twitter-topic-2@61,twitter-topic-2@62,twitter-topic-2@63,twitter-topic-2@64,twitter-topic-2@65,twitter-topic-2@66,twitter-topic-2@67,twitter-topic-2@68,twitter-topic-2@69,twitter-topic-2@70,twitter-topic-2@71,twitter-topic-2@72,twitter-topic-2@73,twitter-topic-2@74,twitter-topic-2@75,twitter-topic-2@76,twitter-topic-2@77,twitter-topic-2@78,twitter-topic-2@79,twitter-topic-2@80,twitter-topic-2@81,twitter-topic-2@82,twitter-topic-2@83,twitter-topic-2@84,twitter-topic-2@85,twitter-topic-2@86,twitter-topic-2@87,twitter-topic-2@88,twitter-topic-2@89,twitter-topic-2@90,twitter-topic-2@91,twitter-topic-2@92,twitter-topic-2@93,twitter-topic-2@94,twitter-topic-2@95,twitter-topic-2@96,twitter-topic-2@97
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:14:53' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:14:53' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T19:14:53' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 74 common frames omitted
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7342761866395751052]
partitions: [2]
 And Offsets: [98], sending it to Elastic: Thread id 57
2022-07-04 20:23:34 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@98
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:34' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:34' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:34' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5758370334862919732]
partitions: [2]
 And Offsets: [99], sending it to Elastic: Thread id 57
2022-07-04 20:23:44 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@99
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:44' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:44' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:44' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7471207631118062677]
partitions: [2]
 And Offsets: [100], sending it to Elastic: Thread id 57
2022-07-04 20:23:54 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@100
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:54' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:54' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:23:54' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1680306810212439631]
partitions: [0]
 And Offsets: [98], sending it to Elastic: Thread id 53
2022-07-04 20:24:04 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@98
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:04' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:04' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:04' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3897799321705939005]
partitions: [1]
 And Offsets: [123], sending it to Elastic: Thread id 55
2022-07-04 20:24:14 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@123
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:14' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:14' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:14' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3246372484429846045]
partitions: [0]
 And Offsets: [99], sending it to Elastic: Thread id 53
2022-07-04 20:24:24 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@99
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:24' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:24' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:24' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2094620193532318828]
partitions: [1]
 And Offsets: [124], sending it to Elastic: Thread id 55
2022-07-04 20:24:34 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@124
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:34' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:34' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:34' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:24:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:44 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1158256067906523349]
partitions: [2]
 And Offsets: [101], sending it to Elastic: Thread id 57
2022-07-04 20:24:45 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@101
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:44' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:44' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:44' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7089484446900696947]
partitions: [1]
 And Offsets: [125], sending it to Elastic: Thread id 55
2022-07-04 20:24:54 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@125
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:54' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:54' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:24:54' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:04 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6149261083375142598]
partitions: [0]
 And Offsets: [100], sending it to Elastic: Thread id 53
2022-07-04 20:25:05 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@100
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:04' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:04' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:04' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:25:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5520431130331519499]
partitions: [0]
 And Offsets: [101], sending it to Elastic: Thread id 53
2022-07-04 20:25:15 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@101
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:14' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:14' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:14' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [990519268957886660]
partitions: [1]
 And Offsets: [126], sending it to Elastic: Thread id 55
2022-07-04 20:25:25 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@126
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:24' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:24' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:24' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:25:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:34 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6502509222521533831]
partitions: [2]
 And Offsets: [102], sending it to Elastic: Thread id 57
2022-07-04 20:25:35 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@102
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:34' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:34' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:34' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:25:44 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:44 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:44 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:44 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4396030165515659620]
partitions: [1]
 And Offsets: [127], sending it to Elastic: Thread id 55
2022-07-04 20:25:45 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@127
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:44' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:44' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:44' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:25:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:54 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2640458463805510208]
partitions: [1]
 And Offsets: [128], sending it to Elastic: Thread id 55
2022-07-04 20:25:55 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@128
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:54' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:54' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:25:54' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:26:04 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:04 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:04 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:04 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:04 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:04 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:04 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:04 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:05 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:05 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4188174928465197148]
partitions: [1]
 And Offsets: [129], sending it to Elastic: Thread id 55
2022-07-04 20:26:05 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@129
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:04' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:04' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:04' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:26:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1544948582840375412]
partitions: [0]
 And Offsets: [102], sending it to Elastic: Thread id 53
2022-07-04 20:26:15 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@102
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:14' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:14' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:14' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:26:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:24 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2263841717087678709]
partitions: [1]
 And Offsets: [130], sending it to Elastic: Thread id 55
2022-07-04 20:26:25 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@130
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:24' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:24' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:24' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:26:34 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:34 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:34 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:34 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:34 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:34 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:34 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6639043355036346332]
partitions: [0]
 And Offsets: [103], sending it to Elastic: Thread id 53
2022-07-04 20:26:35 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@103
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:34' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:34' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:34' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:26:44 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:44 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:44 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:44 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [279532728073498605]
partitions: [1]
 And Offsets: [131], sending it to Elastic: Thread id 55
2022-07-04 20:26:45 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@131
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:44' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:44' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:44' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670026468572102266]
partitions: [2]
 And Offsets: [103], sending it to Elastic: Thread id 57
2022-07-04 20:26:55 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@103
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:54' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:54' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:26:54' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:27:04 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:04 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:04 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:04 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:04 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:05 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:05 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:05 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:05 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:05 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6544031734406056519]
partitions: [2]
 And Offsets: [104], sending it to Elastic: Thread id 57
2022-07-04 20:27:05 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@104
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:04' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:04' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:04' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:27:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6255226918654448282]
partitions: [0]
 And Offsets: [104], sending it to Elastic: Thread id 53
2022-07-04 20:27:15 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@104
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:14' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:14' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:14' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:27:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1187651801363535995]
partitions: [0]
 And Offsets: [105], sending it to Elastic: Thread id 53
2022-07-04 20:27:25 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@105
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:24' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:24' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:24' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:27:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:34 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4761526681691611345]
partitions: [1]
 And Offsets: [132], sending it to Elastic: Thread id 55
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@132
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:34' of property 'createdAt'; nested exception is org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:34' of property 'createdAt'
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.data.elasticsearch.core.convert.ConversionException: Unable to convert value '2022-07-04T20:27:34' of property 'createdAt'
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:75)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.propertyConverterWrite(MappingElasticsearchConverter.java:1067)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeProperties(MappingElasticsearchConverter.java:888)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:767)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.writeInternal(MappingElasticsearchConverter.java:745)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter$Writer.write(MappingElasticsearchConverter.java:703)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:170)
	at org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter.write(MappingElasticsearchConverter.java:83)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter.mapObject(ElasticsearchConverter.java:87)
	at org.springframework.data.elasticsearch.core.RequestFactory.indexRequest(RequestFactory.java:623)
	at org.springframework.data.elasticsearch.core.RequestFactory.lambda$bulkRequest$1(RequestFactory.java:248)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.springframework.data.elasticsearch.core.RequestFactory.bulkRequest(RequestFactory.java:245)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:319)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: OffsetSeconds
	at java.base/java.time.LocalDate.get0(LocalDate.java:709)
	at java.base/java.time.LocalDate.getLong(LocalDate.java:688)
	at java.base/java.time.LocalDateTime.getLong(LocalDateTime.java:718)
	at java.base/java.time.format.DateTimePrintContext.getValue(DateTimePrintContext.java:308)
	at java.base/java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser.format(DateTimeFormatterBuilder.java:3628)
	at java.base/java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimeFormatterBuilder.java:2402)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1849)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1823)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter$PatternDateFormatter.format(ElasticsearchDateConverter.java:326)
	at org.springframework.data.elasticsearch.core.convert.ElasticsearchDateConverter.format(ElasticsearchDateConverter.java:96)
	at org.springframework.data.elasticsearch.core.convert.TemporalPropertyValueConverter.write(TemporalPropertyValueConverter.java:72)
	... 71 common frames omitted
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-1
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-2
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-0
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-1]
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-2]
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-0]
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-3-5fe8fd53-e6ba-4191-9745-5bc83f9d927b sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-2-9b6386d4-68c4-4bd5-a806-9d052ca21c80 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-1-b3d11f76-696d-477a-b892-8acbcfd1b1f1 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-2 unregistered
2022-07-04 20:27:35 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-3 unregistered
2022-07-04 20:27:35 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-1 unregistered
2022-07-04 20:27:35 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 20:27:35 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 20:27:35 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:27:35 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:27:35 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:27:49 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 12272 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 20:27:49 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 20:27:49 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 20:27:49 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 20:27:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:27:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 137 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 20:27:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:27:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 20:27:50 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 20:27:50 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 20:27:51 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:27:51 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:27:51 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946671088
2022-07-04 20:27:52 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: ef1af681-ca50-4d28-aea8-b7265923bb41

2022-07-04 20:27:54 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8182
2022-07-04 20:27:54 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Started KafkaToElasticServiceApplication in 10.243 seconds (JVM running for 11.058)
2022-07-04 20:27:54 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2022-07-04 20:27:54 [main] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Topics with name twitter-topic is ready for Operation!
2022-07-04 20:27:54 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:27:54 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946674742
2022-07-04 20:27:54 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:27:54 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:27:54 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946674759
2022-07-04 20:27:54 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:27:54 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:27:54 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:27:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656946674771
2022-07-04 20:27:54 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:27:54 [twitter-topic-consumer-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cluster ID: IVYZDQTlS0-OG3sTo2Nk8w
2022-07-04 20:27:54 [twitter-topic-consumer-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cluster ID: IVYZDQTlS0-OG3sTo2Nk8w
2022-07-04 20:27:54 [twitter-topic-consumer-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cluster ID: IVYZDQTlS0-OG3sTo2Nk8w
2022-07-04 20:27:54 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:27:54 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:27:54 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:27:54 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:39092 (id: 2147483644 rack: null)
2022-07-04 20:27:54 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:27:54 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:27:57 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-1-989e2837-19a8-4495-93d3-687b56ee8dba', protocol='range'}
2022-07-04 20:27:57 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-2-39c0337d-482e-4cd8-946d-7be5d1312c35', protocol='range'}
2022-07-04 20:27:57 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-3-56a120ed-3c5d-4069-b6c6-ce924a802001', protocol='range'}
2022-07-04 20:27:57 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Finished assignment for group at generation 3: {consumer-twitter-topic-consumer-1-989e2837-19a8-4495-93d3-687b56ee8dba=Assignment(partitions=[twitter-topic-0]), consumer-twitter-topic-consumer-2-39c0337d-482e-4cd8-946d-7be5d1312c35=Assignment(partitions=[twitter-topic-1]), consumer-twitter-topic-consumer-3-56a120ed-3c5d-4069-b6c6-ce924a802001=Assignment(partitions=[twitter-topic-2])}
2022-07-04 20:27:57 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-3-56a120ed-3c5d-4069-b6c6-ce924a802001', protocol='range'}
2022-07-04 20:27:57 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-1-989e2837-19a8-4495-93d3-687b56ee8dba', protocol='range'}
2022-07-04 20:27:57 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-2-39c0337d-482e-4cd8-946d-7be5d1312c35', protocol='range'}
2022-07-04 20:27:57 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-0])
2022-07-04 20:27:57 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-2])
2022-07-04 20:27:57 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-1])
2022-07-04 20:27:57 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-0
2022-07-04 20:27:57 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-2
2022-07-04 20:27:57 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-1
2022-07-04 20:27:57 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-2 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:19092 (id: 1 rack: null)], epoch=absent}}
2022-07-04 20:27:57 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-0 to the committed offset FetchPosition{offset=106, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:39092 (id: 3 rack: null)], epoch=absent}}
2022-07-04 20:27:57 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-1 to the committed offset FetchPosition{offset=133, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:29092 (id: 2 rack: null)], epoch=absent}}
2022-07-04 20:27:57 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-1]
2022-07-04 20:27:57 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-0]
2022-07-04 20:27:57 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-2]
2022-07-04 20:28:01 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1077369693480776940]
partitions: [2]
 And Offsets: [105], sending it to Elastic: Thread id 57
2022-07-04 20:28:01 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3829163955085263893]
partitions: [0]
 And Offsets: [106], sending it to Elastic: Thread id 53
2022-07-04 20:28:03 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1110090134028284039]
2022-07-04 20:28:03 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3886782619536494647]
2022-07-04 20:28:03 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1110090134028284039
2022-07-04 20:28:03 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3886782619536494647
2022-07-04 20:28:04 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8698976248776677734]
partitions: [2]
 And Offsets: [106], sending it to Elastic: Thread id 57
2022-07-04 20:28:05 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8288921917903317307]
2022-07-04 20:28:05 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8288921917903317307
2022-07-04 20:28:14 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3517010864122589122]
partitions: [2]
 And Offsets: [107], sending it to Elastic: Thread id 57
2022-07-04 20:28:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8703971380053594052]
2022-07-04 20:28:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8703971380053594052
2022-07-04 20:28:24 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4778244877910819189]
partitions: [0]
 And Offsets: [107], sending it to Elastic: Thread id 53
2022-07-04 20:28:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5223914778899190415]
2022-07-04 20:28:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5223914778899190415
2022-07-04 20:28:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7811197779879563599]
partitions: [0]
 And Offsets: [108], sending it to Elastic: Thread id 53
2022-07-04 20:28:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [685843502154443984]
2022-07-04 20:28:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 685843502154443984
2022-07-04 20:28:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6673395507758812735]
partitions: [0]
 And Offsets: [109], sending it to Elastic: Thread id 53
2022-07-04 20:28:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7002983143627286369]
2022-07-04 20:28:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7002983143627286369
2022-07-04 20:28:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4868058112240296464]
partitions: [2]
 And Offsets: [108], sending it to Elastic: Thread id 57
2022-07-04 20:28:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1345596147772638454]
2022-07-04 20:28:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1345596147772638454
2022-07-04 20:29:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6294825281317580308]
partitions: [0]
 And Offsets: [110], sending it to Elastic: Thread id 53
2022-07-04 20:29:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7364872769068363237]
2022-07-04 20:29:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7364872769068363237
2022-07-04 20:29:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3032971873298155480]
partitions: [1]
 And Offsets: [133], sending it to Elastic: Thread id 55
2022-07-04 20:29:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [658966095974286421]
2022-07-04 20:29:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 658966095974286421
2022-07-04 20:29:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2630837137487347303]
partitions: [1]
 And Offsets: [134], sending it to Elastic: Thread id 55
2022-07-04 20:29:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [500721713361502336]
2022-07-04 20:29:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 500721713361502336
2022-07-04 20:29:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3883972856665485527]
partitions: [0]
 And Offsets: [111], sending it to Elastic: Thread id 53
2022-07-04 20:29:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [880511517046005023]
2022-07-04 20:29:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 880511517046005023
2022-07-04 20:29:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4289409768539721092]
partitions: [2]
 And Offsets: [109], sending it to Elastic: Thread id 57
2022-07-04 20:29:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3295275960506621172]
2022-07-04 20:29:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3295275960506621172
2022-07-04 20:29:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2660091932971386194]
partitions: [0]
 And Offsets: [112], sending it to Elastic: Thread id 53
2022-07-04 20:29:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3332702752651371593]
2022-07-04 20:29:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3332702752651371593
2022-07-04 20:30:05 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5914621616640033229]
partitions: [1]
 And Offsets: [135], sending it to Elastic: Thread id 55
2022-07-04 20:30:05 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1023502793362838834]
2022-07-04 20:30:05 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1023502793362838834
2022-07-04 20:30:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8540772254145126032]
partitions: [0]
 And Offsets: [113], sending it to Elastic: Thread id 53
2022-07-04 20:30:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6645541236437774615]
2022-07-04 20:30:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6645541236437774615
2022-07-04 20:30:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5982675710978891042]
partitions: [1]
 And Offsets: [136], sending it to Elastic: Thread id 55
2022-07-04 20:30:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8777913556730189827]
2022-07-04 20:30:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8777913556730189827
2022-07-04 20:30:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [299584198195275293]
partitions: [2]
 And Offsets: [110], sending it to Elastic: Thread id 57
2022-07-04 20:30:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4467949243489123967]
2022-07-04 20:30:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4467949243489123967
2022-07-04 20:30:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7012199012136966409]
partitions: [2]
 And Offsets: [111], sending it to Elastic: Thread id 57
2022-07-04 20:30:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5106377054675735807]
2022-07-04 20:30:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5106377054675735807
2022-07-04 20:30:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [822514614258700706]
partitions: [1]
 And Offsets: [137], sending it to Elastic: Thread id 55
2022-07-04 20:30:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3610641580469999455]
2022-07-04 20:30:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3610641580469999455
2022-07-04 20:31:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6230985973410581099]
partitions: [0]
 And Offsets: [114], sending it to Elastic: Thread id 53
2022-07-04 20:31:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3502561426958546934]
2022-07-04 20:31:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3502561426958546934
2022-07-04 20:31:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5475382283524975525]
partitions: [2]
 And Offsets: [112], sending it to Elastic: Thread id 57
2022-07-04 20:31:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1057967251485466041]
2022-07-04 20:31:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1057967251485466041
2022-07-04 20:31:25 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3140990789375302198]
partitions: [2]
 And Offsets: [113], sending it to Elastic: Thread id 57
2022-07-04 20:31:25 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4434114345771332709]
2022-07-04 20:31:25 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4434114345771332709
2022-07-04 20:31:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [181731926771739416]
partitions: [2]
 And Offsets: [114], sending it to Elastic: Thread id 57
2022-07-04 20:31:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2663660418145460594]
2022-07-04 20:31:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2663660418145460594
2022-07-04 20:31:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [219110188713190319]
partitions: [1]
 And Offsets: [138], sending it to Elastic: Thread id 55
2022-07-04 20:31:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8049616103787706466]
2022-07-04 20:31:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8049616103787706466
2022-07-04 20:31:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5881535396986955475]
partitions: [0]
 And Offsets: [115], sending it to Elastic: Thread id 53
2022-07-04 20:31:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2411711446996646006]
2022-07-04 20:31:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2411711446996646006
2022-07-04 20:32:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1436887658765296176]
partitions: [0]
 And Offsets: [116], sending it to Elastic: Thread id 53
2022-07-04 20:32:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [850997734466556731]
2022-07-04 20:32:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 850997734466556731
2022-07-04 20:32:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1051036924220183986]
partitions: [2]
 And Offsets: [115], sending it to Elastic: Thread id 57
2022-07-04 20:32:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [911440919457353376]
2022-07-04 20:32:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 911440919457353376
2022-07-04 20:32:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8242958175790908885]
partitions: [0]
 And Offsets: [117], sending it to Elastic: Thread id 53
2022-07-04 20:32:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1133526445002274084]
2022-07-04 20:32:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1133526445002274084
2022-07-04 20:32:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [967232738691929954]
partitions: [0]
 And Offsets: [118], sending it to Elastic: Thread id 53
2022-07-04 20:32:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6056082348250778518]
2022-07-04 20:32:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6056082348250778518
2022-07-04 20:32:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1818219654110061537]
partitions: [1]
 And Offsets: [139], sending it to Elastic: Thread id 55
2022-07-04 20:32:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6220698758275647074]
2022-07-04 20:32:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6220698758275647074
2022-07-04 20:32:51 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -3 disconnected.
2022-07-04 20:32:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8905870861310970958]
partitions: [1]
 And Offsets: [140], sending it to Elastic: Thread id 55
2022-07-04 20:32:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2220666854215164191]
2022-07-04 20:32:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2220666854215164191
2022-07-04 20:33:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1199280412973172203]
partitions: [0]
 And Offsets: [119], sending it to Elastic: Thread id 53
2022-07-04 20:33:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4252859273260921137]
2022-07-04 20:33:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4252859273260921137
2022-07-04 20:33:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1799044460751990275]
partitions: [2]
 And Offsets: [116], sending it to Elastic: Thread id 57
2022-07-04 20:33:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8301225083419534344]
2022-07-04 20:33:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8301225083419534344
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight FETCH request with correlation id 786 due to node 1 being disconnected (elapsed time since creation: 445ms, elapsed time since send: 445ms, request timeout: 30000ms)
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1366917383, epoch=651) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:31 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node -1 disconnected.
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node -1 disconnected.
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 789 due to node 1 being disconnected (elapsed time since creation: 17ms, elapsed time since send: 17ms, request timeout: 30000ms)
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1366917383, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 792 due to node 1 being disconnected (elapsed time since creation: 45ms, elapsed time since send: 45ms, request timeout: 30000ms)
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1366917383, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 795 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1366917383, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 797 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1366917383, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 799 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2022-07-04 20:33:31 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1366917383, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:34 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:34 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2147483644 disconnected.
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:34 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cancelled in-flight FETCH request with correlation id 787 due to node 3 being disconnected (elapsed time since creation: 769ms, elapsed time since send: 769ms, request timeout: 30000ms)
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight FETCH request with correlation id 807 due to node 3 being disconnected (elapsed time since creation: 769ms, elapsed time since send: 769ms, request timeout: 30000ms)
2022-07-04 20:33:34 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=385923887, epoch=648) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2147483644 disconnected.
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=363484234, epoch=4) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:34 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node -3 disconnected.
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-07-04 20:33:34 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-07-04 20:33:34 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2147483644 disconnected.
2022-07-04 20:33:34 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:39092 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:34 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 811 due to node 3 being disconnected (elapsed time since creation: 30ms, elapsed time since send: 30ms, request timeout: 30000ms)
2022-07-04 20:33:34 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 796 due to node 3 being disconnected (elapsed time since creation: 153ms, elapsed time since send: 153ms, request timeout: 30000ms)
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=363484234, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:34 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=385923887, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 20:33:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 20:33:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 20:33:35 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2147483645 disconnected.
2022-07-04 20:33:35 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight FETCH request with correlation id 816 due to node 2 being disconnected (elapsed time since creation: 372ms, elapsed time since send: 372ms, request timeout: 30000ms)
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cancelled in-flight FETCH request with correlation id 800 due to node 2 being disconnected (elapsed time since creation: 673ms, elapsed time since send: 673ms, request timeout: 30000ms)
2022-07-04 20:33:35 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2147483645 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2147483645 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=1) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:35 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:29092 (id: 2147483645 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=662) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Group coordinator localhost:29092 (id: 2147483645 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cancelled in-flight FETCH request with correlation id 798 due to node 2 being disconnected (elapsed time since creation: 364ms, elapsed time since send: 364ms, request timeout: 30000ms)
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cancelled in-flight METADATA request with correlation id 799 due to node 2 being disconnected (elapsed time since creation: 39ms, elapsed time since send: 39ms, request timeout: 30000ms)
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=1) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:29092 (id: 2147483645 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:35 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:35 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:35 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:35 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:35 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:35 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 806 due to node 2 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 802 due to node 2 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Cancelled in-flight API_VERSIONS request with correlation id 7 due to node 2 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 3600000ms)
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 820 due to node 2 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 804 due to node 2 being disconnected (elapsed time since creation: 17ms, elapsed time since send: 17ms, request timeout: 30000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Cancelled in-flight API_VERSIONS request with correlation id 8 due to node 2 being disconnected (elapsed time since creation: 6ms, elapsed time since send: 6ms, request timeout: 3600000ms)
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 809 due to node 2 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 823 due to node 2 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 826 due to node 2 being disconnected (elapsed time since creation: 133ms, elapsed time since send: 133ms, request timeout: 30000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 808 due to node 2 being disconnected (elapsed time since creation: 222ms, elapsed time since send: 222ms, request timeout: 30000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 813 due to node 2 being disconnected (elapsed time since creation: 163ms, elapsed time since send: 163ms, request timeout: 30000ms)
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Cancelled in-flight API_VERSIONS request with correlation id 9 due to node 2 being disconnected (elapsed time since creation: 220ms, elapsed time since send: 220ms, request timeout: 3600000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 832 due to node 2 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 815 due to node 2 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Cancelled in-flight API_VERSIONS request with correlation id 10 due to node 2 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 3600000ms)
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cancelled in-flight API_VERSIONS request with correlation id 820 due to node 2 being disconnected (elapsed time since creation: 7ms, elapsed time since send: 7ms, request timeout: 30000ms)
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:36 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:37 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:37 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:37 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:37 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:37 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:37 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:37 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:37 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:37 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:38 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:38 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:38 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:38 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:38 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:38 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:38 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:38 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:38 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:38 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:38 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:38 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:38 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:39 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:39 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:39 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:39 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:39 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:39 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:39 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:39 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:39 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:39 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:40 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:40 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:40 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:40 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:40 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:40 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:40 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:40 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:40 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:40 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:40 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:41 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:41 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:41 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:41 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:41 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:41 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:41 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:41 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:41 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:41 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:41 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:41 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:41 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:41 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:42 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:42 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:42 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:42 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:42 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:42 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:42 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:42 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:42 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:42 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:42 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:42 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:43 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:43 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:43 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:43 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:43 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:43 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:43 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:43 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:43 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:43 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:44 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:44 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:44 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:44 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:44 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:44 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:44 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:44 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:44 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:44 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:44 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:44 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:45 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:45 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:45 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:45 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:45 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:45 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:45 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:45 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:45 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:45 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:45 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:45 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:46 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:46 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:46 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:46 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:46 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:46 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:46 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:46 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:46 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:46 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:46 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:46 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:46 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:47 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:47 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:47 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:47 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:47 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:47 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:47 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:47 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:47 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:47 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:47 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:47 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:47 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:48 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:48 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:48 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:48 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:48 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:48 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:48 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:48 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:48 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:48 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:49 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:49 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:49 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:49 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:49 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:49 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:49 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:49 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:49 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:50 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:50 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:50 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:50 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:50 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:50 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:50 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:50 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:50 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:50 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:50 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:50 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:51 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:51 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:51 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:51 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:51 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:51 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:51 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:51 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:51 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:51 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:52 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:52 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:52 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:52 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:53 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:53 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:53 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:53 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:53 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:53 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:53 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:53 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:53 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:53 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:54 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:54 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:54 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:54 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:54 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:54 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:54 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:54 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:54 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:54 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:54 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:54 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:55 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:55 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:55 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:55 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:56 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:56 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:56 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:56 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:56 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:56 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:56 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:56 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:56 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:56 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:56 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:57 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:57 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:57 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:57 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:57 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:57 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:57 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:57 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:57 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:57 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:58 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:58 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:58 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:58 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:58 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:58 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:58 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:58 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:58 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:58 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:58 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:58 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:58 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:59 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:59 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:59 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:33:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:59 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:33:59 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:33:59 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:59 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:33:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:33:59 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:33:59 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:33:59 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:33:59 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:34:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:34:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:34:00 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:00 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:00 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:34:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:34:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:34:01 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:01 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:01 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:02 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:02 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:02 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:34:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:02 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:02 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:02 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:34:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:02 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:34:02 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:02 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:02 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:03 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:03 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:03 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:34:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:03 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:03 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:03 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:03 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:03 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:34:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:34:03 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:03 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:03 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:34:04 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:04 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:04 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2022-07-04 20:34:04 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:04 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:34:04 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:05 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:05 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:05 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:05 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:05 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2022-07-04 20:34:05 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:05 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:05 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 20:34:05 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [kafka-admin-client-thread | adminclient-1] INFO  o.a.k.c.a.i.AdminMetadataManager - [AdminClient clientId=adminclient-1] Metadata update failed
org.apache.kafka.common.errors.TimeoutException: Timed out waiting for a node assignment. Call: fetchMetadata
2022-07-04 20:34:05 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:05 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:05 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:05 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:06 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:06 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:06 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:06 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:06 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:06 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:06 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:06 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:06 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:06 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:07 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:07 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:07 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:07 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:07 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:07 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:07 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:07 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:07 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:07 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:07 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:07 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:08 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:08 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:08 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:08 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:08 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:08 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:08 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:08 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:08 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:09 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:09 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:09 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:09 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:09 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:09 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:09 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:09 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:09 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:09 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:09 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:09 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:09 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:09 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:09 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:09 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:09 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:09 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:09 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:09 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:10 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:10 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:10 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:10 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:10 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:10 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:10 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:10 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:10 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:10 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:10 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:10 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:10 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:10 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:10 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:10 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:10 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:10 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:11 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:11 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:11 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:11 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:11 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:11 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:11 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:11 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:11 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:11 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:11 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:11 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:11 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:12 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:12 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:12 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:12 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:12 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:12 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:12 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:13 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:13 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:13 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:13 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:13 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:13 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:13 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:13 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:13 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:13 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:13 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:13 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:13 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:13 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:13 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:13 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:14 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:14 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:14 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:14 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:14 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:14 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:14 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:14 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:14 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:14 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:14 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:14 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:14 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:14 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:14 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:14 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:15 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:15 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:15 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:15 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:15 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:15 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:15 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:15 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:15 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:15 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:15 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:16 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:16 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:16 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:16 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:16 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:16 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:16 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:16 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:16 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:16 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:16 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:16 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:16 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:16 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:16 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:16 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:16 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:17 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:17 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:17 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:17 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:17 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:17 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:17 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:17 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:17 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:17 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:17 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:18 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:18 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:18 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:18 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:18 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:18 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:18 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:18 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:18 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:18 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:18 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:18 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:18 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:18 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:18 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:19 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:19 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:19 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:19 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:19 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:19 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:19 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:19 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:19 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:19 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:19 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:19 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:19 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:19 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:19 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:19 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:19 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:20 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:20 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:20 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:20 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:20 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:20 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:20 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:20 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:20 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:20 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:20 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:21 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:21 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:21 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:21 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:21 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:21 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:21 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:21 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:21 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:21 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:21 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:21 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:21 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:22 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:22 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:22 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:22 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:22 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:22 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:22 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:22 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:22 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:22 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:22 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:22 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:22 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:22 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:22 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:22 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:22 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:23 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:23 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:23 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:23 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:23 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:23 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:23 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:23 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:23 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:23 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:23 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:23 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:23 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:23 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:23 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:23 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:23 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:24 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:24 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:24 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:24 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:24 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:24 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:24 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:24 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:24 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:24 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:24 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:25 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:25 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:25 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:25 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:25 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:25 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:25 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:25 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:25 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:25 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:25 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:26 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:26 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:26 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:26 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:26 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:26 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:26 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:26 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:26 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:26 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:27 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:27 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:27 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:27 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:27 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:27 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:27 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:27 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:27 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:28 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:28 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:28 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:28 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:29 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:29 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:30 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:30 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:30 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:30 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:30 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:30 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:30 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:30 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:30 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:30 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:30 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:30 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:31 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:31 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:31 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:31 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:31 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:31 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:31 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:31 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:31 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:31 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:31 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:31 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:32 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:32 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:32 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:32 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:32 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:32 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:32 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:32 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:32 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:32 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:32 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:32 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:32 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:32 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:32 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:32 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:32 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:32 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:33 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:33 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:33 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:33 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:33 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:33 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:34 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:34 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:34 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:34 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:34 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:34 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:34 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:34 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:34 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:34 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:34 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:34 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:34 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:34 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:34 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:35 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:35 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:35 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:35 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:35 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:35 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:35 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:35 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:35 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:36 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:36 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:36 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:36 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:37 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:37 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:37 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:37 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:37 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:37 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:37 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:37 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:37 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:37 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:37 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:37 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:37 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:37 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:37 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:37 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:37 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:38 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:38 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:38 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:38 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:38 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:38 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:38 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:38 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:38 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:38 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:39 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:39 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:39 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:39 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:39 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:39 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:39 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:39 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:39 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:39 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:39 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:40 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:40 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:40 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:40 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:40 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:40 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:40 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:40 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:40 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:40 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:41 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:41 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:41 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:41 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:41 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:41 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:41 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:41 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:41 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:41 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:41 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:42 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:42 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:42 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:42 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:42 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:42 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:42 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:42 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:42 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:42 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:42 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:43 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:43 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:43 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:43 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:43 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:43 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:43 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:43 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:43 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:43 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:44 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:44 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:44 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:44 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:44 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:44 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:44 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:44 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:44 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:44 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:44 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:44 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:44 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:45 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:45 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:45 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:46 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:46 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:46 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:46 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:46 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:46 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:46 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:46 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:46 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:46 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:46 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:46 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:46 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:46 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:46 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:46 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:47 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:47 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:47 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:47 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:47 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:47 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:47 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:47 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:47 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:48 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:48 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:48 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:48 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:48 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:48 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:48 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:48 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:48 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:49 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:49 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:49 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:49 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:49 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:50 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:50 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:50 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:50 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:50 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:50 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:50 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:50 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:50 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:50 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:50 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:51 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:51 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:51 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:51 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:51 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:51 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:51 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:51 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:51 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:52 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:52 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:52 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:52 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:52 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:52 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:52 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:52 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:52 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:52 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:52 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:52 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:52 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:52 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:52 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:52 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:52 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:52 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:52 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:53 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:53 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:53 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:53 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:54 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:54 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:54 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:54 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:54 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:54 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:54 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:54 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:54 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:55 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:55 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:55 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:55 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:55 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:55 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:55 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:55 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:55 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:55 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:55 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:55 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:55 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:55 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:55 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:55 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:55 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:55 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:55 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:56 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:56 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:56 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:56 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:56 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:56 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:56 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:56 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:56 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:56 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:57 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:57 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:57 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:57 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:58 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:58 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:58 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:58 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:58 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:58 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:58 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:58 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:58 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:58 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:58 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:59 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:59 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:59 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:59 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:59 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:34:59 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:34:59 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:59 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:34:59 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:34:59 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:34:59 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:35:00 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:00 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:35:00 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:00 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:00 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:00 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:00 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:00 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:00 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:00 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:00 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:35:01 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:01 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:01 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:01 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:01 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:01 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:01 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:01 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:01 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:01 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:01 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:01 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:01 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:01 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:01 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:01 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:01 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:01 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:02 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:02 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1325866234, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:35:02 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:02 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:02 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:02 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:02 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:02 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:02 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:02 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:02 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:03 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:03 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:03 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:03 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:03 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:03 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:03 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:03 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:35:03 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:03 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:03 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:03 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=1629271838, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:35:04 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:04 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:04 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:04 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:04 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:04 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:04 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:04 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:04 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:04 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:04 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:04 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=898631288, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 20:35:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:04 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 2 disconnected.
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 1 disconnected.
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-2
2022-07-04 20:35:05 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-1
2022-07-04 20:35:05 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Connection to node 3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-0
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-1]
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-2]
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-0]
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-3 unregistered
2022-07-04 20:35:05 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-2 unregistered
2022-07-04 20:35:05 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-1 unregistered
2022-07-04 20:35:05 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 20:35:05 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 20:35:05 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 20:35:05 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 20:35:05 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 20:52:54 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 2144 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 20:52:54 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 20:52:54 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 20:52:54 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 20:52:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:52:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 163 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 20:52:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 20:52:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 20:52:56 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 20:52:56 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 20:52:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:52:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:52:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656948176753
2022-07-04 20:52:59 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 2f95858e-307f-41b2-b0a1-3b149a6cc92f

2022-07-04 20:53:01 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8182
2022-07-04 20:53:01 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Started KafkaToElasticServiceApplication in 10.252 seconds (JVM running for 11.3)
2022-07-04 20:53:01 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2022-07-04 20:53:01 [main] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Topics with name twitter-topic is ready for Operation!
2022-07-04 20:53:01 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:53:01 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656948181603
2022-07-04 20:53:01 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:53:01 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:53:01 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656948181620
2022-07-04 20:53:01 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:53:01 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 20:53:01 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 20:53:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656948181630
2022-07-04 20:53:01 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 20:53:01 [twitter-topic-consumer-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cluster ID: SKNtog52T02j_bpemRtCiw
2022-07-04 20:53:01 [twitter-topic-consumer-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cluster ID: SKNtog52T02j_bpemRtCiw
2022-07-04 20:53:01 [twitter-topic-consumer-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cluster ID: SKNtog52T02j_bpemRtCiw
2022-07-04 20:53:03 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:19092 (id: 2147483646 rack: null)
2022-07-04 20:53:03 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:53:03 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:19092 (id: 2147483646 rack: null)
2022-07-04 20:53:03 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:53:03 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:19092 (id: 2147483646 rack: null)
2022-07-04 20:53:03 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 20:53:09 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-2-829d7908-8072-4735-a5cb-cc570f864c41', protocol='range'}
2022-07-04 20:53:09 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-3-8c1ffeb3-7a73-41d7-adfc-70ce25eacd20', protocol='range'}
2022-07-04 20:53:09 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-1-a940d9b5-d7f7-43f6-87ce-c9e59e00b15f', protocol='range'}
2022-07-04 20:53:09 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Finished assignment for group at generation 1: {consumer-twitter-topic-consumer-3-8c1ffeb3-7a73-41d7-adfc-70ce25eacd20=Assignment(partitions=[twitter-topic-2]), consumer-twitter-topic-consumer-1-a940d9b5-d7f7-43f6-87ce-c9e59e00b15f=Assignment(partitions=[twitter-topic-0]), consumer-twitter-topic-consumer-2-829d7908-8072-4735-a5cb-cc570f864c41=Assignment(partitions=[twitter-topic-1])}
2022-07-04 20:53:09 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-2-829d7908-8072-4735-a5cb-cc570f864c41', protocol='range'}
2022-07-04 20:53:09 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-3-8c1ffeb3-7a73-41d7-adfc-70ce25eacd20', protocol='range'}
2022-07-04 20:53:09 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-2])
2022-07-04 20:53:09 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-1])
2022-07-04 20:53:09 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-1-a940d9b5-d7f7-43f6-87ce-c9e59e00b15f', protocol='range'}
2022-07-04 20:53:09 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-0])
2022-07-04 20:53:09 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-0
2022-07-04 20:53:09 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-1
2022-07-04 20:53:09 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-2
2022-07-04 20:53:09 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-1
2022-07-04 20:53:09 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-0
2022-07-04 20:53:09 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-2
2022-07-04 20:53:10 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:19092 (id: 1 rack: null)], epoch=absent}}.
2022-07-04 20:53:10 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-2]
2022-07-04 20:53:10 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:29092 (id: 2 rack: null)], epoch=absent}}.
2022-07-04 20:53:10 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-1]
2022-07-04 20:53:10 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:39092 (id: 3 rack: null)], epoch=absent}}.
2022-07-04 20:53:10 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-0]
2022-07-04 20:53:14 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 22 number of messages received with keys [4742643862753885571, 7295563295750500747, 2659374972547062684, 4004118082381801951, 18911316099783602, 2487403714404097203, 6843435102656479452, 5873642905881176603, 8512076439898056054, 3101933851060575327, 3171378129665050757, 7602330514983533402, 662263167198882085, 6376379659333640049, 4548149924036480054, 6929023607077337132, 353337146705113077, 5628259671623129842, 462583347269777108, 7637219772791155434, 8639046380368781569, 3928076103050244786]
partitions: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], sending it to Elastic: Thread id 57
2022-07-04 20:53:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 17 number of messages received with keys [5943122821183795441, 7391339213184827037, 6169598489049350482, 6065011062884107412, 7626520769075149837, 3987921153021861719, 768520687807748495, 8482129423778637352, 8930871235390809321, 1106135972868449282, 2562297672488939953, 7727597579231516717, 4726470674928917375, 3650135818289311141, 8031141235543021707, 529767320985200978, 5560668648590851192]
partitions: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], sending it to Elastic: Thread id 55
2022-07-04 20:53:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 17 number of messages received with keys [5328314961268586357, 1063579867607824250, 375913496422114591, 8052277861655377173, 6446378085884763649, 2140117880065423214, 106473803273824834, 6572020591647542319, 1719221177870120581, 331111674815774519, 7006379714559857006, 5380307151649901573, 6877532280165369694, 6549423151479205123, 4390641265222904540, 295586457656847025, 7562624262581156985]
partitions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 And Offsets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], sending it to Elastic: Thread id 53
2022-07-04 20:53:14 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4933922888484426860, 2388938271872077235, 593960558695597428, 572524931031559575, 161727933079631960, 5572626513244297503, 1142232541262560826, 5836227928109031478, 4039217021188901263, 512733294798594961, 894362032071642101, 1692651467936061098, 2573051958679683012, 5264438914314058611, 5221403137460999024, 2034675045267632232, 6296413538313489287, 8888431330757735737, 728714339053762534, 4282915745023444313, 7201434303641435654, 6067025161340731720]
2022-07-04 20:53:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8621958441122039894, 7557486537490959696, 4563341029939092412, 7329912358767805135, 1972430925456814623, 7834218922541467729, 8299344522547443031, 5787793864653109111, 4591269333026978413, 4540069041147141705, 4869242213393760226, 9116280054155969742, 5487204160715690947, 5138834067426368048, 4478579565047496915, 9097554601869621158, 1268712986750643437]
2022-07-04 20:53:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3243761014299577556, 2508631211561496296, 2253827099626286268, 3134899552950339876, 8161022090316491886, 2711360061757618717, 6167207472048498559, 4397171326406637358, 2031859753862015705, 8588662957970827001, 1760161548180361891, 2408928320310884044, 5802004888701373224, 2838286569429004068, 7355219108841006947, 8271255638772319025, 4745044843732202525]
2022-07-04 20:53:14 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4933922888484426860
2022-07-04 20:53:14 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8621958441122039894
2022-07-04 20:53:14 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3243761014299577556
2022-07-04 20:53:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5691987970408375913]
partitions: [1]
 And Offsets: [17], sending it to Elastic: Thread id 55
2022-07-04 20:53:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6163090355381992857]
2022-07-04 20:53:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6163090355381992857
2022-07-04 20:53:29 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3000942970572189266]
partitions: [2]
 And Offsets: [22], sending it to Elastic: Thread id 57
2022-07-04 20:53:29 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2383509654890509675]
2022-07-04 20:53:29 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2383509654890509675
2022-07-04 20:53:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6926475947533060211]
partitions: [1]
 And Offsets: [18], sending it to Elastic: Thread id 55
2022-07-04 20:53:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4210616201453219384]
2022-07-04 20:53:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4210616201453219384
2022-07-04 20:53:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1962886337557311884]
partitions: [2]
 And Offsets: [23], sending it to Elastic: Thread id 57
2022-07-04 20:53:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3010205414285531518]
2022-07-04 20:53:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3010205414285531518
2022-07-04 20:53:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7535420703921726340]
partitions: [0]
 And Offsets: [17], sending it to Elastic: Thread id 53
2022-07-04 20:53:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2700279689378681158]
2022-07-04 20:53:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2700279689378681158
2022-07-04 20:54:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [856715437948954397]
partitions: [1]
 And Offsets: [19], sending it to Elastic: Thread id 55
2022-07-04 20:54:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2223989177140364879]
2022-07-04 20:54:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2223989177140364879
2022-07-04 20:54:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2278917773122879876]
partitions: [0]
 And Offsets: [18], sending it to Elastic: Thread id 53
2022-07-04 20:54:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6185337610882722888]
2022-07-04 20:54:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6185337610882722888
2022-07-04 20:54:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5298476957895844700]
partitions: [1]
 And Offsets: [20], sending it to Elastic: Thread id 55
2022-07-04 20:54:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3824394292845702656]
2022-07-04 20:54:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3824394292845702656
2022-07-04 20:54:39 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6179578243858527018]
partitions: [2]
 And Offsets: [24], sending it to Elastic: Thread id 57
2022-07-04 20:54:39 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2369829212786717686]
2022-07-04 20:54:39 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2369829212786717686
2022-07-04 20:54:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5467147413004045401]
partitions: [2]
 And Offsets: [25], sending it to Elastic: Thread id 57
2022-07-04 20:54:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3001825458180639514]
2022-07-04 20:54:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3001825458180639514
2022-07-04 20:54:59 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6027775884230520232]
partitions: [2]
 And Offsets: [26], sending it to Elastic: Thread id 57
2022-07-04 20:54:59 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1426207884154606480]
2022-07-04 20:54:59 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1426207884154606480
2022-07-04 20:55:09 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4413566283645548436]
partitions: [0]
 And Offsets: [19], sending it to Elastic: Thread id 53
2022-07-04 20:55:09 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5989167841423875048]
2022-07-04 20:55:09 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5989167841423875048
2022-07-04 20:55:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1851244378947207787]
partitions: [1]
 And Offsets: [21], sending it to Elastic: Thread id 55
2022-07-04 20:55:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3775159470128328782]
2022-07-04 20:55:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3775159470128328782
2022-07-04 20:55:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8650568670374643992]
partitions: [1]
 And Offsets: [22], sending it to Elastic: Thread id 55
2022-07-04 20:55:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3071808145960560708]
2022-07-04 20:55:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3071808145960560708
2022-07-04 20:55:39 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6576449117563063264]
partitions: [0]
 And Offsets: [20], sending it to Elastic: Thread id 53
2022-07-04 20:55:39 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1991515753546595936]
2022-07-04 20:55:39 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1991515753546595936
2022-07-04 20:55:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3694378239281236050]
partitions: [1]
 And Offsets: [23], sending it to Elastic: Thread id 55
2022-07-04 20:55:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6038324583817863492]
2022-07-04 20:55:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6038324583817863492
2022-07-04 20:55:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5014904436136656678]
partitions: [0]
 And Offsets: [21], sending it to Elastic: Thread id 53
2022-07-04 20:55:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1487975314481404465]
2022-07-04 20:55:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1487975314481404465
2022-07-04 20:56:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4756611062047963914]
partitions: [1]
 And Offsets: [24], sending it to Elastic: Thread id 55
2022-07-04 20:56:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [954245249059530378]
2022-07-04 20:56:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 954245249059530378
2022-07-04 20:56:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8393450783604388982]
partitions: [1]
 And Offsets: [25], sending it to Elastic: Thread id 55
2022-07-04 20:56:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5159885761009145060]
2022-07-04 20:56:19 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5159885761009145060
2022-07-04 20:56:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3491123508084440254]
partitions: [1]
 And Offsets: [26], sending it to Elastic: Thread id 55
2022-07-04 20:56:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7260534240914911225]
2022-07-04 20:56:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7260534240914911225
2022-07-04 20:56:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8499793011441801665]
partitions: [1]
 And Offsets: [27], sending it to Elastic: Thread id 55
2022-07-04 20:56:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [973698644688671078]
2022-07-04 20:56:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 973698644688671078
2022-07-04 20:56:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4094030230297968665]
partitions: [2]
 And Offsets: [27], sending it to Elastic: Thread id 57
2022-07-04 20:56:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [427256922969214219]
2022-07-04 20:56:49 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 427256922969214219
2022-07-04 20:56:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7477856728206991123]
partitions: [0]
 And Offsets: [22], sending it to Elastic: Thread id 53
2022-07-04 20:56:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6118964263514191776]
2022-07-04 20:56:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6118964263514191776
2022-07-04 20:57:09 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3794563187185488282]
partitions: [2]
 And Offsets: [28], sending it to Elastic: Thread id 57
2022-07-04 20:57:09 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4260576442373381237]
2022-07-04 20:57:09 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4260576442373381237
2022-07-04 20:57:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8869847996164342708]
partitions: [2]
 And Offsets: [29], sending it to Elastic: Thread id 57
2022-07-04 20:57:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5619297220984975383]
2022-07-04 20:57:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5619297220984975383
2022-07-04 20:57:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [894734216214464912]
partitions: [1]
 And Offsets: [28], sending it to Elastic: Thread id 55
2022-07-04 20:57:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1911385900582565196]
2022-07-04 20:57:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1911385900582565196
2022-07-04 20:57:39 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8803771051146330719]
partitions: [0]
 And Offsets: [23], sending it to Elastic: Thread id 53
2022-07-04 20:57:39 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2130293283221601599]
2022-07-04 20:57:39 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2130293283221601599
2022-07-04 20:57:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8560460960157813158]
partitions: [1]
 And Offsets: [29], sending it to Elastic: Thread id 55
2022-07-04 20:57:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8767261768351768039]
2022-07-04 20:57:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8767261768351768039
2022-07-04 20:57:57 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -1 disconnected.
2022-07-04 20:57:59 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5182018322853419354]
partitions: [1]
 And Offsets: [30], sending it to Elastic: Thread id 55
2022-07-04 20:57:59 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5252672035988591697]
2022-07-04 20:57:59 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5252672035988591697
2022-07-04 20:58:09 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [792163052385626044]
partitions: [0]
 And Offsets: [24], sending it to Elastic: Thread id 53
2022-07-04 20:58:09 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4992902478198723698]
2022-07-04 20:58:09 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4992902478198723698
2022-07-04 20:58:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1226829740177967441]
partitions: [0]
 And Offsets: [25], sending it to Elastic: Thread id 53
2022-07-04 20:58:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5583296757257724142]
2022-07-04 20:58:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5583296757257724142
2022-07-04 20:58:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4696893118387950848]
partitions: [0]
 And Offsets: [26], sending it to Elastic: Thread id 53
2022-07-04 20:58:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4531846271358924061]
2022-07-04 20:58:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4531846271358924061
2022-07-04 20:58:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6095426355833555355]
partitions: [1]
 And Offsets: [31], sending it to Elastic: Thread id 55
2022-07-04 20:58:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [9057869262883986047]
2022-07-04 20:58:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 9057869262883986047
2022-07-04 20:58:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2688732444215456144]
partitions: [0]
 And Offsets: [27], sending it to Elastic: Thread id 53
2022-07-04 20:58:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4045903187435478507]
2022-07-04 20:58:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4045903187435478507
2022-07-04 20:58:59 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7702878305473429361]
partitions: [2]
 And Offsets: [30], sending it to Elastic: Thread id 57
2022-07-04 20:58:59 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2995533741721163786]
2022-07-04 20:58:59 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2995533741721163786
2022-07-04 20:59:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2796029207742177636]
partitions: [1]
 And Offsets: [32], sending it to Elastic: Thread id 55
2022-07-04 20:59:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6860170183476554804]
2022-07-04 20:59:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6860170183476554804
2022-07-04 20:59:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8534586181662706020]
partitions: [2]
 And Offsets: [31], sending it to Elastic: Thread id 57
2022-07-04 20:59:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8678361206874151841]
2022-07-04 20:59:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8678361206874151841
2022-07-04 20:59:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7896436625303678729]
partitions: [1]
 And Offsets: [33], sending it to Elastic: Thread id 55
2022-07-04 20:59:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6386961119424599111]
2022-07-04 20:59:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6386961119424599111
2022-07-04 20:59:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6024032611980198605]
partitions: [1]
 And Offsets: [34], sending it to Elastic: Thread id 55
2022-07-04 20:59:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1663069678886842269]
2022-07-04 20:59:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1663069678886842269
2022-07-04 20:59:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [713821417946018419]
partitions: [1]
 And Offsets: [35], sending it to Elastic: Thread id 55
2022-07-04 20:59:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5394652672319891244]
2022-07-04 20:59:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5394652672319891244
2022-07-04 20:59:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [537905733613313811]
partitions: [0]
 And Offsets: [28], sending it to Elastic: Thread id 53
2022-07-04 20:59:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1522878289775217946]
2022-07-04 20:59:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1522878289775217946
2022-07-04 21:00:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [9076850127280985323]
partitions: [1]
 And Offsets: [36], sending it to Elastic: Thread id 55
2022-07-04 21:00:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7596978313840980999]
2022-07-04 21:00:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7596978313840980999
2022-07-04 21:00:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1826617996379842950]
partitions: [0]
 And Offsets: [29], sending it to Elastic: Thread id 53
2022-07-04 21:00:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6277827269311637374]
2022-07-04 21:00:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6277827269311637374
2022-07-04 21:00:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [885594145107458747]
partitions: [0]
 And Offsets: [30], sending it to Elastic: Thread id 53
2022-07-04 21:00:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5117493010546512547]
2022-07-04 21:00:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5117493010546512547
2022-07-04 21:00:39 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2599081536410104120]
partitions: [2]
 And Offsets: [32], sending it to Elastic: Thread id 57
2022-07-04 21:00:39 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7032964833969557240]
2022-07-04 21:00:39 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7032964833969557240
2022-07-04 21:00:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7645646634541476987]
partitions: [1]
 And Offsets: [37], sending it to Elastic: Thread id 55
2022-07-04 21:00:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2773820508223672911]
2022-07-04 21:00:49 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2773820508223672911
2022-07-04 21:00:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [571718983734071257]
partitions: [0]
 And Offsets: [31], sending it to Elastic: Thread id 53
2022-07-04 21:00:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7402466475668989716]
2022-07-04 21:00:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7402466475668989716
2022-07-04 21:01:09 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5083593617399013434]
partitions: [2]
 And Offsets: [33], sending it to Elastic: Thread id 57
2022-07-04 21:01:09 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7034075882441417175]
2022-07-04 21:01:09 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7034075882441417175
2022-07-04 21:01:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2010314204574807168]
partitions: [2]
 And Offsets: [34], sending it to Elastic: Thread id 57
2022-07-04 21:01:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3152601435497985490]
2022-07-04 21:01:19 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3152601435497985490
2022-07-04 21:01:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6512173485714163902]
partitions: [0]
 And Offsets: [32], sending it to Elastic: Thread id 53
2022-07-04 21:01:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3934545175518675987]
2022-07-04 21:01:29 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3934545175518675987
2022-07-04 21:01:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [556220337253062403]
partitions: [1]
 And Offsets: [38], sending it to Elastic: Thread id 55
2022-07-04 21:01:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8610743886424180738]
2022-07-04 21:01:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8610743886424180738
2022-07-04 21:01:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5670417352684570548]
partitions: [0]
 And Offsets: [33], sending it to Elastic: Thread id 53
2022-07-04 21:01:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4711339087617154326]
2022-07-04 21:01:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4711339087617154326
2022-07-04 21:01:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6681421233338423131]
partitions: [0]
 And Offsets: [34], sending it to Elastic: Thread id 53
2022-07-04 21:01:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [733436156975381812]
2022-07-04 21:01:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 733436156975381812
2022-07-04 21:02:02 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Node -2 disconnected.
2022-07-04 21:02:02 [twitter-topic-consumer-1-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Node -2 disconnected.
2022-07-04 21:02:02 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node -1 disconnected.
2022-07-04 21:02:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8523225190445432837]
partitions: [1]
 And Offsets: [39], sending it to Elastic: Thread id 55
2022-07-04 21:02:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5820896162572907694]
2022-07-04 21:02:09 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5820896162572907694
2022-07-04 21:02:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8354914634428636702]
partitions: [0]
 And Offsets: [35], sending it to Elastic: Thread id 53
2022-07-04 21:02:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8349157375963526976]
2022-07-04 21:02:19 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8349157375963526976
2022-07-04 21:02:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [9215935215961865763]
partitions: [1]
 And Offsets: [40], sending it to Elastic: Thread id 55
2022-07-04 21:02:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1069945071295461886]
2022-07-04 21:02:29 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1069945071295461886
2022-07-04 21:02:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:39 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:40 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:40 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:40 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:40 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:40 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [237750300149722535]
partitions: [1]
 And Offsets: [41], sending it to Elastic: Thread id 55
2022-07-04 21:02:40 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@41
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information; nested exception is org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:94)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:601)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:584)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:321)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:599)
	... 60 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.elasticsearch.client.RestHighLevelClient.performClientRequest(RestHighLevelClient.java:2699)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:2171)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:2137)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:2105)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:620)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$11(ElasticsearchRestTemplate.java:321)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:582)
	... 59 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2022-07-04 21:02:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:49 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:50 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:50 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:50 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:50 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5239679114624128579]
partitions: [0]
 And Offsets: [36], sending it to Elastic: Thread id 53
2022-07-04 21:02:50 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@36
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information; nested exception is org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:94)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:601)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:584)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:321)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:599)
	... 60 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.elasticsearch.client.RestHighLevelClient.performClientRequest(RestHighLevelClient.java:2699)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:2171)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:2137)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:2105)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:620)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$11(ElasticsearchRestTemplate.java:321)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:582)
	... 59 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2022-07-04 21:02:57 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2022-07-04 21:02:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:02:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:02:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:02:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:02:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:02:59 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:03:00 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:03:00 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:03:00 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:03:00 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6869197451818263328]
partitions: [0]
 And Offsets: [37], sending it to Elastic: Thread id 53
2022-07-04 21:03:00 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@37
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information; nested exception is org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2703)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2302)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2272)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2215)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2125)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2008)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1987)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
Caused by: org.springframework.dao.DataAccessResourceFailureException: Connection refused: no further information; nested exception is java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:94)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:601)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:584)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:321)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkOperation(AbstractElasticsearchTemplate.java:358)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:342)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:185)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:233)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.lambda$saveAll$7(SimpleElasticsearchRepository.java:204)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.executeAndRefresh(SimpleElasticsearchRepository.java:360)
	at org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository.saveAll(SimpleElasticsearchRepository.java:204)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy82.saveAll(Unknown Source)
	at com.microservice.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:29)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.MockTweetsKafkaConsumer.receive(MockTweetsKafkaConsumer.java:70)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2282)
	... 11 common frames omitted
Caused by: java.lang.RuntimeException: Connection refused: no further information
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:599)
	... 60 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:932)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:300)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:288)
	at org.elasticsearch.client.RestHighLevelClient.performClientRequest(RestHighLevelClient.java:2699)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:2171)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:2137)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:2105)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:620)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$11(ElasticsearchRestTemplate.java:321)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:582)
	... 59 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvent(DefaultConnectingIOReactor.java:174)
	at org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor.processEvents(DefaultConnectingIOReactor.java:148)
	at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor.execute(AbstractMultiworkerIOReactor.java:351)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.execute(PoolingNHttpClientConnectionManager.java:221)
	at org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase$1.run(CloseableHttpAsyncClientBase.java:64)
	... 1 common frames omitted
2022-07-04 21:03:03 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Node 3 disconnected.
2022-07-04 21:03:03 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cancelled in-flight FETCH request with correlation id 1437 due to node 3 being disconnected (elapsed time since creation: 404ms, elapsed time since send: 404ms, request timeout: 30000ms)
2022-07-04 21:03:03 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Error sending fetch request (sessionId=267362419, epoch=1177) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2022-07-04 21:03:06 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Attempt to heartbeat failed since coordinator localhost:19092 (id: 2147483646 rack: null) is either not started or not valid
2022-07-04 21:03:06 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:19092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 21:03:06 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:19092 (id: 2147483646 rack: null)
2022-07-04 21:03:06 [twitter-topic-consumer-2-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483646
2022-07-04 21:03:06 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:03:06 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Attempt to heartbeat failed since coordinator localhost:19092 (id: 2147483646 rack: null) is either not started or not valid
2022-07-04 21:03:06 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:19092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 21:03:06 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:19092 (id: 2147483646 rack: null)
2022-07-04 21:03:06 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483646
2022-07-04 21:03:06 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:03:06 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Attempt to heartbeat failed since coordinator localhost:19092 (id: 2147483646 rack: null) is either not started or not valid
2022-07-04 21:03:06 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Group coordinator localhost:19092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 21:03:06 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:19092 (id: 2147483646 rack: null)
2022-07-04 21:03:06 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483646
2022-07-04 21:03:06 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-1
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-2
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-0
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-2]
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-1]
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-0]
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-2-829d7908-8072-4735-a5cb-cc570f864c41 sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-3-8c1ffeb3-7a73-41d7-adfc-70ce25eacd20 sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-1-a940d9b5-d7f7-43f6-87ce-c9e59e00b15f sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-1 unregistered
2022-07-04 21:03:07 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-2 unregistered
2022-07-04 21:03:07 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-3 unregistered
2022-07-04 21:03:07 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:03:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 21:03:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:03:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:03:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:16:03 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 33576 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 21:16:03 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 21:16:03 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 21:16:03 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2022-07-04 21:16:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 21:16:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 160 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 21:16:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 21:16:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 21:16:04 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 21:16:05 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka\kafka-admin\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2022-07-04 21:16:05 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 21:16:05 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka\kafka-admin\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka\kafka-admin\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 47 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:208)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:1105)
	at java.base/java.util.Map.of(Map.java:1353)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:24)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$359f1426.CGLIB$adminClient$0(<generated>)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$359f1426$$FastClassBySpringCGLIB$$bed1523a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$359f1426.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 48 common frames omitted
2022-07-04 21:16:51 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 24716 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 21:16:51 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 21:16:51 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 21:16:51 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2022-07-04 21:16:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 21:16:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 175 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 21:16:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 21:16:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 21:16:53 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 21:20:53 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka\kafka-admin\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2022-07-04 21:20:53 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-04 21:20:53 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mockTweetsKafkaConsumer' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes\com\microservice\demo\kafka\to\elastic\service\consumer\impl\MockTweetsKafkaConsumer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka\kafka-admin\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.microservice.demo.kafka.to.elastic.service.KafkaToElasticServiceApplication.main(KafkaToElasticServiceApplication.java:11)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka\kafka-admin\target\classes\com\microservice\demo\kafka\admin\client\KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservice/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 47 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:208)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:1105)
	at java.base/java.util.Map.of(Map.java:1353)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:24)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$86127214.CGLIB$adminClient$0(<generated>)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$86127214$$FastClassBySpringCGLIB$$ea9c9541.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservice.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$86127214.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 48 common frames omitted
2022-07-04 21:21:01 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 12236 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 21:21:01 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 21:21:01 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 21:21:01 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=e6ea6c3837ee9b1d2cbe04a12af421eefb9e40b1, state=null
2022-07-04 21:21:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 21:21:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 175 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 21:21:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 21:21:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 21:21:03 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=8ee97053-3167-31f5-b5e5-0d59e4433915
2022-07-04 21:21:03 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 21:21:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 21:21:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 21:21:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656949864051
2022-07-04 21:21:05 [I/O dispatcher 1] WARN  org.elasticsearch.client.RestClient - request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:05 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/$%7Belastic-config.index-name%7D] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:05 [main] WARN  org.elasticsearch.client.RestClient - request [PUT http://localhost:9200/$%7Belastic-config.index-name%7D?master_timeout=30s&timeout=30s] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:05 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 7811be45-d500-43a6-b43f-e6eb02eb9155

2022-07-04 21:21:06 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8182
2022-07-04 21:21:07 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Started KafkaToElasticServiceApplication in 8.131 seconds (JVM running for 9.181)
2022-07-04 21:21:07 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2022-07-04 21:21:07 [main] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Topics with name twitter-topic is ready for Operation!
2022-07-04 21:21:07 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 21:21:07 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656949867344
2022-07-04 21:21:07 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 21:21:07 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 21:21:07 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656949867364
2022-07-04 21:21:07 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 21:21:07 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 21:21:07 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 21:21:07 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656949867377
2022-07-04 21:21:07 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 21:21:07 [twitter-topic-consumer-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cluster ID: Lc-9K0TfTAC83Y8RO9WyLw
2022-07-04 21:21:07 [twitter-topic-consumer-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cluster ID: Lc-9K0TfTAC83Y8RO9WyLw
2022-07-04 21:21:07 [twitter-topic-consumer-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cluster ID: Lc-9K0TfTAC83Y8RO9WyLw
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:29092 (id: 2147483645 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'}
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483645
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:29092 (id: 2147483645 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 21:21:08 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:21:09 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:21:09 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:21:09 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:21:09 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:21:09 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:21:09 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:21:15 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-3-bce628a8-5ca4-4b78-ae90-261641354f66', protocol='range'}
2022-07-04 21:21:15 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-2-ddab8ff0-1137-4e00-8705-7ca39afa5140', protocol='range'}
2022-07-04 21:21:15 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-1-df8895b3-05d2-4d8f-b5e7-45e10d8f7a08', protocol='range'}
2022-07-04 21:21:15 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Finished assignment for group at generation 1: {consumer-twitter-topic-consumer-1-df8895b3-05d2-4d8f-b5e7-45e10d8f7a08=Assignment(partitions=[twitter-topic-0]), consumer-twitter-topic-consumer-2-ddab8ff0-1137-4e00-8705-7ca39afa5140=Assignment(partitions=[twitter-topic-1]), consumer-twitter-topic-consumer-3-bce628a8-5ca4-4b78-ae90-261641354f66=Assignment(partitions=[twitter-topic-2])}
2022-07-04 21:21:15 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-3-bce628a8-5ca4-4b78-ae90-261641354f66', protocol='range'}
2022-07-04 21:21:15 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-2-ddab8ff0-1137-4e00-8705-7ca39afa5140', protocol='range'}
2022-07-04 21:21:15 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-1])
2022-07-04 21:21:15 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-2])
2022-07-04 21:21:15 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=1, memberId='consumer-twitter-topic-consumer-1-df8895b3-05d2-4d8f-b5e7-45e10d8f7a08', protocol='range'}
2022-07-04 21:21:15 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-0])
2022-07-04 21:21:15 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-1
2022-07-04 21:21:15 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-0
2022-07-04 21:21:15 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-2
2022-07-04 21:21:15 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-0
2022-07-04 21:21:15 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-1
2022-07-04 21:21:15 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Found no committed offset for partition twitter-topic-2
2022-07-04 21:21:15 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:39092 (id: 3 rack: null)], epoch=absent}}.
2022-07-04 21:21:15 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:19092 (id: 1 rack: null)], epoch=absent}}.
2022-07-04 21:21:15 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-2]
2022-07-04 21:21:15 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-1]
2022-07-04 21:21:15 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting offset for partition twitter-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:29092 (id: 2 rack: null)], epoch=absent}}.
2022-07-04 21:21:15 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-0]
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 5 number of messages received with keys [2532117583276733674, 7465093836944165402, 5757037623363674612, 7759500088591069314, 3435720181016402258]
partitions: [1, 1, 1, 1, 1]
 And Offsets: [0, 1, 2, 3, 4], sending it to Elastic: Thread id 55
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [119778822416562971, 8409104617297855874, 5945562440179213536, 2604011413909444131, 1145899226608150466]
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 119778822416562971
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2043494381625036018]
partitions: [1]
 And Offsets: [5], sending it to Elastic: Thread id 55
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7273957932051012479]
2022-07-04 21:21:20 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7273957932051012479
2022-07-04 21:21:25 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7049996162714340127]
partitions: [2]
 And Offsets: [0], sending it to Elastic: Thread id 57
2022-07-04 21:21:25 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:25 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:25 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1194058816405569909]
2022-07-04 21:21:25 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1194058816405569909
2022-07-04 21:21:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [696626602729563880]
partitions: [2]
 And Offsets: [1], sending it to Elastic: Thread id 57
2022-07-04 21:21:35 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:35 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3335341675397707560]
2022-07-04 21:21:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3335341675397707560
2022-07-04 21:21:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [997433530988214450]
partitions: [0]
 And Offsets: [0], sending it to Elastic: Thread id 53
2022-07-04 21:21:45 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:45 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6996506328419107391]
2022-07-04 21:21:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6996506328419107391
2022-07-04 21:21:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2945554590005933843]
partitions: [0]
 And Offsets: [1], sending it to Elastic: Thread id 53
2022-07-04 21:21:55 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:55 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:21:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1847628801503497425]
2022-07-04 21:21:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1847628801503497425
2022-07-04 21:22:05 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5428678487398337267]
partitions: [1]
 And Offsets: [6], sending it to Elastic: Thread id 55
2022-07-04 21:22:05 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:05 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:05 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6649475234494425482]
2022-07-04 21:22:05 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6649475234494425482
2022-07-04 21:22:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6591783357557932506]
partitions: [1]
 And Offsets: [7], sending it to Elastic: Thread id 55
2022-07-04 21:22:15 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:15 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4881941919409533082]
2022-07-04 21:22:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4881941919409533082
2022-07-04 21:22:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3850861475229310312]
partitions: [1]
 And Offsets: [8], sending it to Elastic: Thread id 55
2022-07-04 21:22:25 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:25 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5000960020382500986]
2022-07-04 21:22:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5000960020382500986
2022-07-04 21:22:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2128569907329062896]
partitions: [2]
 And Offsets: [2], sending it to Elastic: Thread id 57
2022-07-04 21:22:35 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:35 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [315526539597915807]
2022-07-04 21:22:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 315526539597915807
2022-07-04 21:22:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [975964633684596936]
partitions: [1]
 And Offsets: [9], sending it to Elastic: Thread id 55
2022-07-04 21:22:45 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:45 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4155107541627996753]
2022-07-04 21:22:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4155107541627996753
2022-07-04 21:22:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [84715715504340278]
partitions: [0]
 And Offsets: [2], sending it to Elastic: Thread id 53
2022-07-04 21:22:55 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:55 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:22:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [69472673341732959]
2022-07-04 21:22:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 69472673341732959
2022-07-04 21:23:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6545635417138212613]
partitions: [0]
 And Offsets: [3], sending it to Elastic: Thread id 53
2022-07-04 21:23:05 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:05 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8680587002470958251]
2022-07-04 21:23:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8680587002470958251
2022-07-04 21:23:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7028203693665909699]
partitions: [1]
 And Offsets: [10], sending it to Elastic: Thread id 55
2022-07-04 21:23:15 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:15 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5952754359676689835]
2022-07-04 21:23:15 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5952754359676689835
2022-07-04 21:23:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4204541170801361683]
partitions: [1]
 And Offsets: [11], sending it to Elastic: Thread id 55
2022-07-04 21:23:25 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:25 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3213919475318680842]
2022-07-04 21:23:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3213919475318680842
2022-07-04 21:23:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8237907678410592549]
partitions: [0]
 And Offsets: [4], sending it to Elastic: Thread id 53
2022-07-04 21:23:35 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:35 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2506718040816147151]
2022-07-04 21:23:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2506718040816147151
2022-07-04 21:23:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3806279602462363738]
partitions: [2]
 And Offsets: [3], sending it to Elastic: Thread id 57
2022-07-04 21:23:45 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:45 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/$%7Belastic-config.index-name%7D/_refresh] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:23:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticRepositoryIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [362156802033239497]
2022-07-04 21:23:45 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 362156802033239497
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-2
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-0
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-1
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-2]
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-0]
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-1]
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-2-ddab8ff0-1137-4e00-8705-7ca39afa5140 sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-3-bce628a8-5ca4-4b78-ae90-261641354f66 sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-1-df8895b3-05d2-4d8f-b5e7-45e10d8f7a08 sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-3 unregistered
2022-07-04 21:23:48 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-2 unregistered
2022-07-04 21:23:48 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-1 unregistered
2022-07-04 21:23:48 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:23:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 21:23:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:23:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:23:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:24:49 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Starting KafkaToElasticServiceApplication using Java 17.0.3.1 on LAPTOP-BM6U357P with PID 34800 (F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo\kafka-to-elastic-service\target\classes started by deepa in F:\SpringBoot_Learning\Event-DrivenArchitecure\Event-driven-Service\Microservice-Demo)
2022-07-04 21:24:49 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - The following 1 profile is active: "kafka_to_elastic"
2022-07-04 21:24:49 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2022-07-04 21:24:49 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=kafka-to-elastic-service,config-client, profiles=[kafka_to_elastic], label=null, version=d0fa2be565dda358f1f2a0129f5d9f1eaab491f6, state=null
2022-07-04 21:24:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-04 21:24:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 152 ms. Found 1 Elasticsearch repository interfaces.
2022-07-04 21:24:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-04 21:24:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-04 21:24:51 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5d316f22-5465-3d93-add2-7fef675ecb19
2022-07-04 21:24:56 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2022-07-04 21:24:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 21:24:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 21:24:56 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656950096299
2022-07-04 21:25:02 [I/O dispatcher 1] WARN  org.elasticsearch.client.RestClient - request [GET http://localhost:9200/] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:02 [main] WARN  org.elasticsearch.client.RestClient - request [HEAD http://localhost:9200/$%7Belastic-config.index-name%7D] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:02 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: bcd43a4b-f387-4d23-b2a8-1626fb3fc0ef

2022-07-04 21:25:03 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8182
2022-07-04 21:25:03 [main] INFO  c.m.d.k.t.e.s.KafkaToElasticServiceApplication - Started KafkaToElasticServiceApplication in 17.165 seconds (JVM running for 18.219)
2022-07-04 21:25:03 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2022-07-04 21:25:03 [main] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Topics with name twitter-topic is ready for Operation!
2022-07-04 21:25:04 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 21:25:04 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656950104093
2022-07-04 21:25:04 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 21:25:04 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 21:25:04 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656950104115
2022-07-04 21:25:04 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 21:25:04 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-twitter-topic-consumer-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = twitter-topic-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.LongDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class io.confluent.kafka.serializers.KafkaAvroDeserializer

2022-07-04 21:25:04 [main] INFO  i.c.k.s.KafkaAvroDeserializerConfig - KafkaAvroDeserializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	specific.avro.reader = true
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.1
2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 97671528ba54a138
2022-07-04 21:25:04 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1656950104129
2022-07-04 21:25:04 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Subscribed to topic(s): twitter-topic
2022-07-04 21:25:04 [twitter-topic-consumer-1-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Cluster ID: Lc-9K0TfTAC83Y8RO9WyLw
2022-07-04 21:25:04 [twitter-topic-consumer-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Cluster ID: Lc-9K0TfTAC83Y8RO9WyLw
2022-07-04 21:25:04 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:04 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:04 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:25:04 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:25:04 [twitter-topic-consumer-2-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Cluster ID: Lc-9K0TfTAC83Y8RO9WyLw
2022-07-04 21:25:04 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:04 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:25:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-1-aa8a1954-477b-4c8b-b25c-1672a4c3c668', protocol='range'}
2022-07-04 21:25:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-2-dbbb13fa-7e71-44db-98ff-06a6576ab795', protocol='range'}
2022-07-04 21:25:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-3-34107975-38ed-485f-9495-e0aaa5ac0466', protocol='range'}
2022-07-04 21:25:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Finished assignment for group at generation 3: {consumer-twitter-topic-consumer-3-34107975-38ed-485f-9495-e0aaa5ac0466=Assignment(partitions=[twitter-topic-2]), consumer-twitter-topic-consumer-2-dbbb13fa-7e71-44db-98ff-06a6576ab795=Assignment(partitions=[twitter-topic-1]), consumer-twitter-topic-consumer-1-aa8a1954-477b-4c8b-b25c-1672a4c3c668=Assignment(partitions=[twitter-topic-0])}
2022-07-04 21:25:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-1-aa8a1954-477b-4c8b-b25c-1672a4c3c668', protocol='range'}
2022-07-04 21:25:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-3-34107975-38ed-485f-9495-e0aaa5ac0466', protocol='range'}
2022-07-04 21:25:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=3, memberId='consumer-twitter-topic-consumer-2-dbbb13fa-7e71-44db-98ff-06a6576ab795', protocol='range'}
2022-07-04 21:25:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-2])
2022-07-04 21:25:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-0])
2022-07-04 21:25:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-1])
2022-07-04 21:25:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-2
2022-07-04 21:25:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-0
2022-07-04 21:25:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-1
2022-07-04 21:25:07 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:29092 (id: 2 rack: null)], epoch=absent}}
2022-07-04 21:25:07 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-1 to the committed offset FetchPosition{offset=12, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:19092 (id: 1 rack: null)], epoch=absent}}
2022-07-04 21:25:07 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-2 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:39092 (id: 3 rack: null)], epoch=absent}}
2022-07-04 21:25:07 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-0]
2022-07-04 21:25:07 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-2]
2022-07-04 21:25:07 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-1]
2022-07-04 21:25:11 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 3 number of messages received with keys [137272217998032408, 3920880049727355382, 2448646325017450936]
partitions: [2, 2, 2]
 And Offsets: [4, 5, 6], sending it to Elastic: Thread id 59
2022-07-04 21:25:11 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 3 number of messages received with keys [3027231614908588671, 8691611639768894998, 909275628399819710]
partitions: [0, 0, 0]
 And Offsets: [5, 6, 7], sending it to Elastic: Thread id 55
2022-07-04 21:25:11 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 2 number of messages received with keys [4699036429818393675, 7783688447169183932]
partitions: [1, 1]
 And Offsets: [12, 13], sending it to Elastic: Thread id 57
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Group coordinator localhost:29092 (id: 2147483645 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Group coordinator localhost:29092 (id: 2147483645 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Group coordinator localhost:29092 (id: 2147483645 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Requesting disconnect from last known coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483645
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483645
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Client requested disconnect from node 2147483645
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Discovered group coordinator localhost:29092 (id: 2147483645 rack: null)
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Attempt to heartbeat with Generation{generationId=3, memberId='consumer-twitter-topic-consumer-1-aa8a1954-477b-4c8b-b25c-1672a4c3c668', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Attempt to heartbeat with Generation{generationId=3, memberId='consumer-twitter-topic-consumer-3-34107975-38ed-485f-9495-e0aaa5ac0466', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Attempt to heartbeat with Generation{generationId=3, memberId='consumer-twitter-topic-consumer-2-dbbb13fa-7e71-44db-98ff-06a6576ab795', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2022-07-04 21:25:27 [kafka-coordinator-heartbeat-thread | twitter-topic-consumer] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1118901485275855469, 8283161987761727630, 1344325842241673952]
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [263731612791051256, 6056066420603118893, 4036701325004362856]
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1118901485275855469
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 263731612791051256
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Failing OffsetCommit request since the consumer is not part of an active group
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Failing OffsetCommit request since the consumer is not part of an active group
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Consumer exception
java.lang.IllegalStateException: This error handler cannot process 'org.apache.kafka.clients.consumer.CommitFailedException's; no record information is available
	at org.springframework.kafka.listener.DefaultErrorHandler.handleOtherException(DefaultErrorHandler.java:155)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1799)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1298)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1165)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1030)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3048)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3043)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitIfNecessary(KafkaMessageListenerContainer.java:3029)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processCommits(KafkaMessageListenerContainer.java:2821)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1326)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	... 4 common frames omitted
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Consumer exception
java.lang.IllegalStateException: This error handler cannot process 'org.apache.kafka.clients.consumer.CommitFailedException's; no record information is available
	at org.springframework.kafka.listener.DefaultErrorHandler.handleOtherException(DefaultErrorHandler.java:155)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1799)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1298)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1165)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1030)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3048)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3043)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitIfNecessary(KafkaMessageListenerContainer.java:3029)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processCommits(KafkaMessageListenerContainer.java:2821)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1326)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	... 4 common frames omitted
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Lost previously assigned partitions twitter-topic-2
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Lost previously assigned partitions twitter-topic-0
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions lost: [twitter-topic-2]
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions lost: [twitter-topic-0]
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-2]
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-0]
2022-07-04 21:25:27 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:25:27 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3844417156208916108, 4328115629619684242]
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3844417156208916108
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Failing OffsetCommit request since the consumer is not part of an active group
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Consumer exception
java.lang.IllegalStateException: This error handler cannot process 'org.apache.kafka.clients.consumer.CommitFailedException's; no record information is available
	at org.springframework.kafka.listener.DefaultErrorHandler.handleOtherException(DefaultErrorHandler.java:155)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.handleConsumerException(KafkaMessageListenerContainer.java:1799)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1298)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1165)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1030)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3048)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3043)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitIfNecessary(KafkaMessageListenerContainer.java:3029)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processCommits(KafkaMessageListenerContainer.java:2821)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1326)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	... 4 common frames omitted
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Lost previously assigned partitions twitter-topic-1
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions lost: [twitter-topic-1]
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-1]
2022-07-04 21:25:28 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] (Re-)joining group
2022-07-04 21:25:30 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=5, memberId='consumer-twitter-topic-consumer-3-b33c160d-594e-43d2-bd0c-2b04414643aa', protocol='range'}
2022-07-04 21:25:30 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=5, memberId='consumer-twitter-topic-consumer-1-fe5615b5-8c54-4124-83d9-7933d2631f8c', protocol='range'}
2022-07-04 21:25:30 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully joined group with generation Generation{generationId=5, memberId='consumer-twitter-topic-consumer-2-d23eb6d2-2766-4808-93d4-8d1fba73e10a', protocol='range'}
2022-07-04 21:25:30 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Finished assignment for group at generation 5: {consumer-twitter-topic-consumer-2-d23eb6d2-2766-4808-93d4-8d1fba73e10a=Assignment(partitions=[twitter-topic-1]), consumer-twitter-topic-consumer-3-b33c160d-594e-43d2-bd0c-2b04414643aa=Assignment(partitions=[twitter-topic-2]), consumer-twitter-topic-consumer-1-fe5615b5-8c54-4124-83d9-7933d2631f8c=Assignment(partitions=[twitter-topic-0])}
2022-07-04 21:25:30 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=5, memberId='consumer-twitter-topic-consumer-1-fe5615b5-8c54-4124-83d9-7933d2631f8c', protocol='range'}
2022-07-04 21:25:30 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=5, memberId='consumer-twitter-topic-consumer-2-d23eb6d2-2766-4808-93d4-8d1fba73e10a', protocol='range'}
2022-07-04 21:25:30 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Successfully synced group in generation Generation{generationId=5, memberId='consumer-twitter-topic-consumer-3-b33c160d-594e-43d2-bd0c-2b04414643aa', protocol='range'}
2022-07-04 21:25:30 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-2])
2022-07-04 21:25:30 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-1])
2022-07-04 21:25:30 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Notifying assignor about the new Assignment(partitions=[twitter-topic-0])
2022-07-04 21:25:30 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-2
2022-07-04 21:25:30 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-1
2022-07-04 21:25:30 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Adding newly assigned partitions: twitter-topic-0
2022-07-04 21:25:30 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-1 to the committed offset FetchPosition{offset=12, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:19092 (id: 1 rack: null)], epoch=absent}}
2022-07-04 21:25:30 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:29092 (id: 2 rack: null)], epoch=absent}}
2022-07-04 21:25:30 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Setting offset for partition twitter-topic-2 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:39092 (id: 3 rack: null)], epoch=absent}}
2022-07-04 21:25:30 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-1]
2022-07-04 21:25:30 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-2]
2022-07-04 21:25:30 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions assigned: [twitter-topic-0]
2022-07-04 21:25:30 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 4 number of messages received with keys [3027231614908588671, 8691611639768894998, 909275628399819710, 8134126148299591038]
partitions: [0, 0, 0, 0]
 And Offsets: [5, 6, 7, 8], sending it to Elastic: Thread id 55
2022-07-04 21:25:30 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 2 number of messages received with keys [4699036429818393675, 7783688447169183932]
partitions: [1, 1]
 And Offsets: [12, 13], sending it to Elastic: Thread id 57
2022-07-04 21:25:30 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 4 number of messages received with keys [137272217998032408, 3920880049727355382, 2448646325017450936, 7908539457243533267]
partitions: [2, 2, 2, 2]
 And Offsets: [4, 5, 6, 7], sending it to Elastic: Thread id 59
2022-07-04 21:25:31 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:31 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3844417156208916108, 4328115629619684242]
2022-07-04 21:25:31 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3844417156208916108
2022-07-04 21:25:31 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:31 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:31 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [263731612791051256, 6056066420603118893, 4036701325004362856, 8065667556560695685]
2022-07-04 21:25:31 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1118901485275855469, 8283161987761727630, 1344325842241673952, 6745379496027768762]
2022-07-04 21:25:31 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1118901485275855469
2022-07-04 21:25:31 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 263731612791051256
2022-07-04 21:25:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8255831649242494976]
partitions: [2]
 And Offsets: [8], sending it to Elastic: Thread id 59
2022-07-04 21:25:35 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6367708784142531166]
2022-07-04 21:25:35 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6367708784142531166
2022-07-04 21:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [358690793748443128]
partitions: [1]
 And Offsets: [14], sending it to Elastic: Thread id 57
2022-07-04 21:25:45 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3853226403232073906]
2022-07-04 21:25:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3853226403232073906
2022-07-04 21:25:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [84949410269948580]
partitions: [1]
 And Offsets: [15], sending it to Elastic: Thread id 57
2022-07-04 21:25:55 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:25:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [230557921029715480]
2022-07-04 21:25:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 230557921029715480
2022-07-04 21:26:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [8273845972157215489]
partitions: [0]
 And Offsets: [9], sending it to Elastic: Thread id 55
2022-07-04 21:26:05 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:26:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [8087092156795086115]
2022-07-04 21:26:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 8087092156795086115
2022-07-04 21:26:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6535100513039407750]
partitions: [0]
 And Offsets: [10], sending it to Elastic: Thread id 55
2022-07-04 21:26:15 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:26:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4590244510405988516]
2022-07-04 21:26:15 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4590244510405988516
2022-07-04 21:26:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7484719145394028431]
partitions: [1]
 And Offsets: [16], sending it to Elastic: Thread id 57
2022-07-04 21:26:25 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:26:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [5178635332229653708]
2022-07-04 21:26:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 5178635332229653708
2022-07-04 21:26:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [3308569296704074376]
partitions: [1]
 And Offsets: [17], sending it to Elastic: Thread id 57
2022-07-04 21:26:35 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:26:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1019349644074367977]
2022-07-04 21:26:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1019349644074367977
2022-07-04 21:26:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [22505185537801423]
partitions: [0]
 And Offsets: [11], sending it to Elastic: Thread id 55
2022-07-04 21:26:45 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:26:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2641355424704956599]
2022-07-04 21:26:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2641355424704956599
2022-07-04 21:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [4788152707040383490]
partitions: [2]
 And Offsets: [9], sending it to Elastic: Thread id 59
2022-07-04 21:26:55 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4625007340330293217]
2022-07-04 21:26:55 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4625007340330293217
2022-07-04 21:27:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5497660374273825079]
partitions: [0]
 And Offsets: [12], sending it to Elastic: Thread id 55
2022-07-04 21:27:05 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:27:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2120803291699303655]
2022-07-04 21:27:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2120803291699303655
2022-07-04 21:27:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [6427161095511877060]
partitions: [2]
 And Offsets: [10], sending it to Elastic: Thread id 59
2022-07-04 21:27:15 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:27:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [6268597069238450694]
2022-07-04 21:27:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 6268597069238450694
2022-07-04 21:27:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1261580157464779011]
partitions: [1]
 And Offsets: [18], sending it to Elastic: Thread id 57
2022-07-04 21:27:25 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:27:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [389325829438321494]
2022-07-04 21:27:25 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 389325829438321494
2022-07-04 21:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1879540103319902763]
partitions: [1]
 And Offsets: [19], sending it to Elastic: Thread id 57
2022-07-04 21:27:35 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [7667567138414960643]
2022-07-04 21:27:35 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 7667567138414960643
2022-07-04 21:27:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7327250308090852891]
partitions: [1]
 And Offsets: [20], sending it to Elastic: Thread id 57
2022-07-04 21:27:45 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:27:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3296432479761793277]
2022-07-04 21:27:45 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3296432479761793277
2022-07-04 21:27:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1143083108389436077]
partitions: [1]
 And Offsets: [21], sending it to Elastic: Thread id 57
2022-07-04 21:27:55 [twitter-topic-consumer-1-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:27:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3113081570928822204]
2022-07-04 21:27:55 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3113081570928822204
2022-07-04 21:28:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5576886679576349243]
partitions: [0]
 And Offsets: [13], sending it to Elastic: Thread id 55
2022-07-04 21:28:05 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:28:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3816935471676552133]
2022-07-04 21:28:05 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3816935471676552133
2022-07-04 21:28:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5680311916138157171]
partitions: [2]
 And Offsets: [11], sending it to Elastic: Thread id 59
2022-07-04 21:28:15 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:28:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1085854979417625420]
2022-07-04 21:28:15 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1085854979417625420
2022-07-04 21:28:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [1400831020735069883]
partitions: [0]
 And Offsets: [14], sending it to Elastic: Thread id 55
2022-07-04 21:28:25 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:28:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4767122480842577650]
2022-07-04 21:28:25 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4767122480842577650
2022-07-04 21:28:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [5842528941689013727]
partitions: [0]
 And Offsets: [15], sending it to Elastic: Thread id 55
2022-07-04 21:28:35 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:28:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [2362916032206853758]
2022-07-04 21:28:35 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 2362916032206853758
2022-07-04 21:28:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [7401276200204040815]
partitions: [0]
 And Offsets: [16], sending it to Elastic: Thread id 55
2022-07-04 21:28:45 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:28:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [1054120133242578215]
2022-07-04 21:28:45 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 1054120133242578215
2022-07-04 21:28:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [673604765156406116]
partitions: [0]
 And Offsets: [17], sending it to Elastic: Thread id 55
2022-07-04 21:28:55 [twitter-topic-consumer-0-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:28:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [3142482809321848074]
2022-07-04 21:28:55 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 3142482809321848074
2022-07-04 21:29:06 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - 1 number of messages received with keys [2451233237673746474]
partitions: [2]
 And Offsets: [12], sending it to Elastic: Thread id 59
2022-07-04 21:29:06 [twitter-topic-consumer-2-C-1] WARN  org.elasticsearch.client.RestClient - request [POST http://localhost:9200/_bulk?timeout=1m] returned 1 warnings: [299 Elasticsearch-7.17.5-8d61b4f7ddf931f219e3745f295ed2bbc50c8e84 "Elasticsearch built-in security features are not enabled. Without authentication, your cluster could be accessible to anyone. See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/security-minimal-setup.html to enable security."]
2022-07-04 21:29:06 [twitter-topic-consumer-2-C-1] INFO  c.m.d.e.i.c.s.i.TwitterElasticIndexClient - Documents indexed successfully with type: com.microservice.demo.elastic.model.index.impl.TwitterIndexModel, and ids: [4292216187960182988]
2022-07-04 21:29:06 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.MockTweetsKafkaConsumer - Documents saved to ElasticSearch with ids: 4292216187960182988
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-0
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-2
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Revoke previously assigned partitions twitter-topic-1
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-0]
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-2]
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: partitions revoked: [twitter-topic-1]
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-2-d23eb6d2-2766-4808-93d4-8d1fba73e10a sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-1-fe5615b5-8c54-4124-83d9-7933d2631f8c sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Member consumer-twitter-topic-consumer-3-b33c160d-594e-43d2-bd0c-2b04414643aa sending LeaveGroup request to coordinator localhost:29092 (id: 2147483645 rack: null) due to the consumer unsubscribed from all topics
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Unsubscribed all topics or patterns and assigned partitions
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Resetting generation due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Request joining group due to: consumer pro-actively leaving the group
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-3 unregistered
2022-07-04 21:29:11 [twitter-topic-consumer-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-1 unregistered
2022-07-04 21:29:11 [twitter-topic-consumer-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitter-topic-consumer-2 unregistered
2022-07-04 21:29:11 [twitter-topic-consumer-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitter-topic-consumer: Consumer stopped
2022-07-04 21:29:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2022-07-04 21:29:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2022-07-04 21:29:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2022-07-04 21:29:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
